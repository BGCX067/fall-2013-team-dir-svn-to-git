<?xml version="1.0" encoding="UTF-8"?>
<improvise>
  <general>
    <bounds>
      <x>0</x>
      <y>0</y>
      <w>1366</w>
      <h>768</h>
    </bounds>
    <deskstyle>untabbed</deskstyle>
    <resizable>true</resizable>
  </general>
  <object id="value0" type="oblivion.util.Range.Double">
    <range>
      <min>-1.0</min>
      <max>1.0</max>
    </range>
  </object>
  <object id="prototype0" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.util.Range.Double</type>
      <name>XRange</name>
      <value type="oblivion.util.Range.Double">
        <range ref="value0"/>
      </value>
    </prototype>
  </object>
  <object id="value1" type="oblivion.util.Range.Double">
    <range>
      <min>-127.20216095209449</min>
      <max>-62.015648524555814</max>
    </range>
  </object>
  <object id="variable0" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype0"/>
      <name>USXRange</name>
      <annotation>
        <description/>
      </annotation>
      <label>USXRange</label>
      <value type="oblivion.util.Range.Double">
        <range ref="value1"/>
      </value>
    </variable>
  </object>
  <object id="prototype1" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.util.Range.Double</type>
      <name/>
      <value type="oblivion.util.Range.Double">
        <range ref="value0"/>
      </value>
    </prototype>
  </object>
  <object id="value2" type="oblivion.util.Range.Double">
    <range>
      <min>20.508691765376426</min>
      <max>49.71798835765335</max>
    </range>
  </object>
  <object id="variable1" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype1"/>
      <name>USYRange</name>
      <annotation>
        <description/>
      </annotation>
      <label>USYRange</label>
      <value type="oblivion.util.Range.Double">
        <range ref="value2"/>
      </value>
    </variable>
  </object>
  <object id="prototype2" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.util.Range.Double</type>
      <name>Range</name>
      <value type="oblivion.util.Range.Double">
        <range ref="value0"/>
      </value>
    </prototype>
  </object>
  <object id="value3" type="oblivion.util.Range.Double">
    <range>
      <min>1996.0</min>
      <max>2012.0</max>
    </range>
  </object>
  <object id="variable2" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype2"/>
      <name>Years</name>
      <annotation>
        <description/>
      </annotation>
      <label>Years</label>
      <locked>true</locked>
      <value type="oblivion.util.Range.Double">
        <range ref="value3"/>
      </value>
    </variable>
  </object>
  <object id="value4" type="oblivion.util.Range.Double">
    <range>
      <min>2002.5641025641025</min>
      <max>2006.748717948718</max>
    </range>
  </object>
  <object id="variable3" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype2"/>
      <name>SliderYears</name>
      <annotation>
        <description/>
      </annotation>
      <label>SliderYears</label>
      <value type="oblivion.util.Range.Double">
        <range ref="value4"/>
      </value>
    </variable>
  </object>
  <object id="value5" type="java.lang.Double">
    <double>NaN</double>
  </object>
  <object id="prototype3" type="oblivion.lp.Prototype">
    <prototype>
      <type>java.lang.Double</type>
      <name>Point</name>
      <value type="java.lang.Double">
        <double ref="value5"/>
      </value>
    </prototype>
  </object>
  <object id="variable4" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype3"/>
      <name>YearAxisPoint</name>
      <annotation>
        <description/>
      </annotation>
      <label>YearAxisPoint</label>
    </variable>
  </object>
  <object id="value6" type="java.lang.String">
    <string>0.00</string>
  </object>
  <object id="prototype4" type="oblivion.lp.Prototype">
    <prototype>
      <type>java.lang.String</type>
      <name>Units Format</name>
      <value type="java.lang.String">
        <string ref="value6"/>
      </value>
    </prototype>
  </object>
  <object id="value7" type="java.lang.String">
    <string>0</string>
  </object>
  <object id="variable5" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype4"/>
      <name>YearLabelFormat</name>
      <annotation>
        <description/>
      </annotation>
      <label>YearLabelFormat</label>
      <value type="java.lang.String">
        <string ref="value7"/>
      </value>
    </variable>
  </object>
  <object id="value8" type="java.awt.Color">
    <color>#eeeeee</color>
  </object>
  <object id="prototype5" type="oblivion.lp.Prototype">
    <prototype>
      <type>java.awt.Color</type>
      <name>Background</name>
      <value type="java.awt.Color">
        <color ref="value8"/>
      </value>
    </prototype>
  </object>
  <object id="value9" type="java.awt.Color">
    <color>#58a1e6</color>
  </object>
  <object id="variable6" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype5"/>
      <name>MapBackgroundColor</name>
      <annotation>
        <description/>
      </annotation>
      <label>MapBackgroundColor</label>
      <value type="java.awt.Color">
        <color ref="value9"/>
      </value>
    </variable>
  </object>
  <object id="value10" type="oblivion.util.Scroll">
    <scroll>
      <min>0</min>
      <max>100</max>
      <lo>0</lo>
      <hi>0</hi>
    </scroll>
  </object>
  <object id="prototype6" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.util.Scroll</type>
      <name>Scroll</name>
      <value type="oblivion.util.Scroll">
        <scroll ref="value10"/>
      </value>
    </prototype>
  </object>
  <object id="variable7" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype6"/>
      <name>Scroll</name>
      <annotation>
        <description/>
      </annotation>
      <label>Scroll</label>
      <value type="oblivion.util.Scroll">
        <scroll ref="value10"/>
      </value>
    </variable>
  </object>
  <object id="prototype7" type="oblivion.lp.Prototype">
    <prototype>
      <type>java.lang.String</type>
      <name>Text</name>
    </prototype>
  </object>
  <object id="value11" type="java.lang.String">
    <string>Clear Selection</string>
  </object>
  <object id="variable8" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype7"/>
      <name>ResetButton</name>
      <annotation>
        <description/>
      </annotation>
      <label ref="value11"/>
      <value type="java.lang.String">
        <string ref="value11"/>
      </value>
    </variable>
  </object>
  <object id="value12" type="oblivion.db.Selection">
    <selection>
      <bits/>
    </selection>
  </object>
  <object id="prototype8" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.Selection</type>
      <name>Selection</name>
      <value type="oblivion.db.Selection">
        <selection ref="value12"/>
      </value>
    </prototype>
  </object>
  <object id="value13" type="oblivion.db.Selection">
    <selection>
      <bits>00000000000000000001</bits>
    </selection>
  </object>
  <object id="variable9" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype8"/>
      <name>StateSelection</name>
      <annotation>
        <description/>
      </annotation>
      <label>StateSelection</label>
      <value type="oblivion.db.Selection">
        <selection ref="value13"/>
      </value>
    </variable>
  </object>
  <object id="value14" type="oblivion.math.Complex">
    <complex>
      <re>0.0</re>
      <im>0.0</im>
    </complex>
  </object>
  <object id="prototype9" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.math.Complex</type>
      <name>Complex</name>
      <value type="oblivion.math.Complex">
        <complex ref="value14"/>
      </value>
    </prototype>
  </object>
  <object id="variable10" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype9"/>
      <name>Complex</name>
      <label>Complex</label>
    </variable>
  </object>
  <object id="prototype10" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.lp.Variable</type>
      <name>Variable</name>
    </prototype>
  </object>
  <object id="variable11" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype10"/>
      <name>Variable</name>
      <label>Variable</label>
    </variable>
  </object>
  <object id="prototype11" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.Data</type>
      <name>Data</name>
    </prototype>
  </object>
  <object id="variable12" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype11"/>
      <name>Data</name>
      <annotation>
        <description/>
      </annotation>
      <label>Data</label>
    </variable>
  </object>
  <object id="prototype12" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.Selection</type>
      <name/>
      <value type="oblivion.db.Selection">
        <selection ref="value12"/>
      </value>
    </prototype>
  </object>
  <object id="value15" type="oblivion.db.Selection">
    <selection>
      <bits>1</bits>
    </selection>
  </object>
  <object id="variable13" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype12"/>
      <name>CZSelection</name>
      <annotation>
        <description/>
      </annotation>
      <label>CZSelection</label>
      <value type="oblivion.db.Selection">
        <selection ref="value15"/>
      </value>
    </variable>
  </object>
  <object id="value16" type="java.lang.String">
    <string/>
  </object>
  <object id="prototype13" type="oblivion.lp.Prototype">
    <prototype>
      <type>java.lang.String</type>
      <name ref="value16"/>
      <value type="java.lang.String">
        <string ref="value16"/>
      </value>
    </prototype>
  </object>
  <object id="value17" type="java.lang.String">
    <string>AZ</string>
  </object>
  <object id="variable14" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype13"/>
      <name>String</name>
      <annotation>
        <description/>
      </annotation>
      <label>String</label>
      <value type="java.lang.String">
        <string ref="value17"/>
      </value>
    </variable>
  </object>
  <object id="variable15" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype13"/>
      <name>String0</name>
      <annotation>
        <description/>
      </annotation>
      <label>String0</label>
      <value type="java.lang.String">
        <string ref="value17"/>
      </value>
    </variable>
  </object>
  <object id="value18" type="java.lang.Integer">
    <integer>0</integer>
  </object>
  <object id="prototype14" type="oblivion.lp.Prototype">
    <prototype>
      <type>java.lang.Integer</type>
      <name ref="value16"/>
      <value type="java.lang.Integer">
        <integer ref="value18"/>
      </value>
    </prototype>
  </object>
  <object id="value19" type="java.lang.Integer">
    <integer>49</integer>
  </object>
  <object id="variable16" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype14"/>
      <name>Integer</name>
      <label>Integer</label>
      <value type="java.lang.Integer">
        <integer ref="value19"/>
      </value>
    </variable>
  </object>
  <object id="prototype15" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.Selection</type>
      <name>Selection</name>
      <value type="oblivion.db.Selection">
        <selection ref="value12"/>
      </value>
    </prototype>
  </object>
  <object id="value20" type="oblivion.db.Selection">
    <selection>
      <bits>11111111111111111111111111111111111111111111111111111111111111111111111111111</bits>
    </selection>
  </object>
  <object id="variable17" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype15"/>
      <name>CountySelection</name>
      <annotation>
        <description/>
      </annotation>
      <label>CountySelection</label>
      <value type="oblivion.db.Selection">
        <selection ref="value20"/>
      </value>
    </variable>
  </object>
  <object id="prototype16" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.util.Range.Double</type>
      <name>Range</name>
      <value type="oblivion.util.Range.Double">
        <range ref="value0"/>
      </value>
    </prototype>
  </object>
  <object id="value21" type="oblivion.util.Range.Double">
    <range>
      <min>1.0</min>
      <max>12.0</max>
    </range>
  </object>
  <object id="variable18" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype16"/>
      <name>Months</name>
      <annotation>
        <description/>
      </annotation>
      <label>Months</label>
      <locked>true</locked>
      <value type="oblivion.util.Range.Double">
        <range ref="value21"/>
      </value>
    </variable>
  </object>
  <object id="value22" type="oblivion.util.Range.Double">
    <range>
      <min>2.1564102564102567</min>
      <max>11.04102564102564</max>
    </range>
  </object>
  <object id="variable19" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype16"/>
      <name>SliderMonths</name>
      <annotation>
        <description/>
      </annotation>
      <label>SliderMonths</label>
      <value type="oblivion.util.Range.Double">
        <range ref="value22"/>
      </value>
    </variable>
  </object>
  <object id="value23" type="oblivion.util.Range.Double">
    <range>
      <min>1.0</min>
      <max>31.0</max>
    </range>
  </object>
  <object id="variable20" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype16"/>
      <name>Days</name>
      <annotation>
        <description/>
      </annotation>
      <label>Days</label>
      <locked>true</locked>
      <value type="oblivion.util.Range.Double">
        <range ref="value23"/>
      </value>
    </variable>
  </object>
  <object id="value24" type="oblivion.util.Range.Double">
    <range>
      <min>1.2307692307692308</min>
      <max>30.923076923076923</max>
    </range>
  </object>
  <object id="variable21" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype16"/>
      <name>SliderDays</name>
      <annotation>
        <description/>
      </annotation>
      <label>SliderDays</label>
      <value type="oblivion.util.Range.Double">
        <range ref="value24"/>
      </value>
    </variable>
  </object>
  <object id="prototype17" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.util.Range.Double</type>
      <name>XRange</name>
      <value type="oblivion.util.Range.Double">
        <range ref="value0"/>
      </value>
    </prototype>
  </object>
  <object id="value25" type="oblivion.util.Range.Double">
    <range>
      <min>-180.0</min>
      <max>-127.0</max>
    </range>
  </object>
  <object id="variable22" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype17"/>
      <name>AlaskaXRange</name>
      <annotation>
        <description/>
      </annotation>
      <label>AlaskaXRange</label>
      <value type="oblivion.util.Range.Double">
        <range ref="value25"/>
      </value>
    </variable>
  </object>
  <object id="value26" type="oblivion.util.Range.Double">
    <range>
      <min>50.41458268899151</min>
      <max>73.39479416683915</max>
    </range>
  </object>
  <object id="variable23" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype1"/>
      <name>AlaskaYRange</name>
      <annotation>
        <description/>
      </annotation>
      <label>USYRange</label>
      <value type="oblivion.util.Range.Double">
        <range ref="value26"/>
      </value>
    </variable>
  </object>
  <object id="value27" type="oblivion.util.Range.Double">
    <range>
      <min>-161.57039446443923</min>
      <max>-152.61354689104706</max>
    </range>
  </object>
  <object id="variable24" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype0"/>
      <name>HawaiiXRange</name>
      <annotation>
        <description/>
      </annotation>
      <label>USXRange</label>
      <value type="oblivion.util.Range.Double">
        <range ref="value27"/>
      </value>
    </variable>
  </object>
  <object id="value28" type="oblivion.util.Range.Double">
    <range>
      <min>18.69912702711277</min>
      <max>22.395603803433307</max>
    </range>
  </object>
  <object id="variable25" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype1"/>
      <name>HawaiiYRange</name>
      <annotation>
        <description/>
      </annotation>
      <label>USYRange</label>
      <value type="oblivion.util.Range.Double">
        <range ref="value28"/>
      </value>
    </variable>
  </object>
  <object id="prototype18" type="oblivion.lp.Prototype">
    <prototype>
      <type>java.awt.Color</type>
      <name>Background</name>
      <value type="java.awt.Color">
        <color ref="value8"/>
      </value>
    </prototype>
  </object>
  <object id="value29" type="java.awt.Color">
    <color>#8b8a8a00</color>
  </object>
  <object id="variable26" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype18"/>
      <name>Transparent</name>
      <annotation>
        <description/>
      </annotation>
      <label>Transparent</label>
      <value type="java.awt.Color">
        <color ref="value29"/>
      </value>
    </variable>
  </object>
  <object id="value30" type="oblivion.awt.color.ColorGradient">
    <gradient>
      <head>#000000</head>
      <tail>#ffffff</tail>
      <segment>
        <head>#000000</head>
        <tail>#ffffff</tail>
        <min>0.0</min>
        <max>1.0</max>
      </segment>
    </gradient>
  </object>
  <object id="prototype19" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.awt.color.ColorGradient</type>
      <name ref="value16"/>
      <value type="oblivion.awt.color.ColorGradient">
        <gradient ref="value30"/>
      </value>
    </prototype>
  </object>
  <object id="value31" type="oblivion.awt.color.ColorGradient">
    <gradient>
      <head>#000000</head>
      <tail>#4dffff</tail>
      <segment>
        <head>#ffffff</head>
        <tail>#ff0000</tail>
        <min>0.0</min>
        <max>1.0</max>
      </segment>
    </gradient>
  </object>
  <object id="variable27" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype19"/>
      <name>ColorGradient</name>
      <annotation>
        <description/>
      </annotation>
      <label>ColorGradient</label>
      <value type="oblivion.awt.color.ColorGradient">
        <gradient ref="value31"/>
      </value>
    </variable>
  </object>
  <object id="value32" type="java.lang.Boolean">
    <boolean>false</boolean>
  </object>
  <object id="prototype20" type="oblivion.lp.Prototype">
    <prototype>
      <type>java.lang.Boolean</type>
      <name>Flag</name>
      <value type="java.lang.Boolean">
        <boolean ref="value32"/>
      </value>
    </prototype>
  </object>
  <object id="variable28" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype20"/>
      <name>DI.flag</name>
      <annotation>
        <description/>
      </annotation>
      <label>Direct Injuries</label>
    </variable>
  </object>
  <object id="variable29" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype20"/>
      <name>II.flag</name>
      <annotation>
        <description/>
      </annotation>
      <label>Indirect Injuries</label>
    </variable>
  </object>
  <object id="variable30" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype20"/>
      <name>DD.flag</name>
      <annotation>
        <description/>
      </annotation>
      <label>Direct Deaths</label>
    </variable>
  </object>
  <object id="variable31" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype20"/>
      <name>ID.flag</name>
      <annotation>
        <description/>
      </annotation>
      <label>Indirect Deaths</label>
    </variable>
  </object>
  <object id="variable32" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype20"/>
      <name>PD.flag</name>
      <annotation>
        <description/>
      </annotation>
      <label>Property Damage</label>
    </variable>
  </object>
  <object id="variable33" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype20"/>
      <name>CD.flag</name>
      <annotation>
        <description/>
      </annotation>
      <label>Crop Damage</label>
    </variable>
  </object>
  <object id="value33" type="java.awt.Color">
    <color>#333333</color>
  </object>
  <object id="prototype21" type="oblivion.lp.Prototype">
    <prototype>
      <type>java.awt.Color</type>
      <name>Foreground</name>
      <value type="java.awt.Color">
        <color ref="value33"/>
      </value>
    </prototype>
  </object>
  <object id="value34" type="java.awt.Color">
    <color>#858686</color>
  </object>
  <object id="variable34" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype21"/>
      <name>line bar</name>
      <annotation>
        <description/>
      </annotation>
      <label>line bar</label>
      <value type="java.awt.Color">
        <color ref="value34"/>
      </value>
    </variable>
  </object>
  <object id="prototype22" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.Selection</type>
      <name>Selection</name>
      <value type="oblivion.db.Selection">
        <selection ref="value12"/>
      </value>
    </prototype>
  </object>
  <object id="value35" type="oblivion.db.Selection">
    <selection>
      <bits>111111111111</bits>
    </selection>
  </object>
  <object id="variable35" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype22"/>
      <name>MonthSelection</name>
      <annotation>
        <description/>
      </annotation>
      <label>MonthSelection</label>
      <value type="oblivion.db.Selection">
        <selection ref="value35"/>
      </value>
    </variable>
  </object>
  <object id="prototype23" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.Selection</type>
      <name>Selection</name>
      <value type="oblivion.db.Selection">
        <selection ref="value12"/>
      </value>
    </prototype>
  </object>
  <object id="value36" type="oblivion.db.Selection">
    <selection>
      <bits>0000000001</bits>
    </selection>
  </object>
  <object id="variable36" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype23"/>
      <name>EventSelection</name>
      <annotation>
        <description/>
      </annotation>
      <label>EventSelection</label>
      <value type="oblivion.db.Selection">
        <selection ref="value36"/>
      </value>
    </variable>
  </object>
  <object id="value37" type="oblivion.db.Schema">
    <schema>
      <type>oblivion.db.io.schema.FlatSchemaSource</type>
      <source>
        <type>oblivion.io.FileSource</type>
        <source>
          <file>data\meta\StormEvents.schema</file>
        </source>
        <format>Whitespace</format>
      </source>
    </schema>
  </object>
  <object id="Schema0" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>Storm</name>
      <schema ref="value37"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="prototype24" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.lex.LexicalSchema</type>
      <name ref="value16"/>
    </prototype>
  </object>
  <object id="variable37" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>Storm</name>
      <annotation>
        <description/>
      </annotation>
      <label>Storm</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema0"/>
      </value>
    </variable>
  </object>
  <object id="value38" type="oblivion.db.Schema">
    <schema>
      <type>oblivion.db.io.schema.FlatSchemaSource</type>
      <source>
        <type>oblivion.io.FileSource</type>
        <source>
          <file>data\meta\States.schema</file>
        </source>
        <format>Whitespace</format>
      </source>
    </schema>
  </object>
  <object id="Schema1" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>States</name>
      <schema ref="value38"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable38" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>States</name>
      <label>States</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema1"/>
      </value>
    </variable>
  </object>
  <object id="value39" type="oblivion.db.Schema">
    <schema>
      <type>oblivion.db.io.schema.FlatSchemaSource</type>
      <source>
        <type>oblivion.io.FileSource</type>
        <source>
          <file>data\meta\Counties.schema</file>
        </source>
        <format>Whitespace</format>
      </source>
    </schema>
  </object>
  <object id="Schema2" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>Counties</name>
      <schema ref="value39"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable39" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>Counties</name>
      <label>Counties</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema2"/>
      </value>
    </variable>
  </object>
  <object id="value40" type="oblivion.db.Schema">
    <schema/>
  </object>
  <object id="Schema3" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>Zones</name>
      <schema ref="value40"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable40" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>Zones</name>
      <label>Zones</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema3"/>
      </value>
    </variable>
  </object>
  <object id="value41" type="oblivion.db.Schema">
    <schema>
      <attribute>
        <type>java.lang.String</type>
        <name>STATE</name>
      </attribute>
    </schema>
  </object>
  <object id="Schema4" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>ListOfStates</name>
      <schema ref="value41"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable41" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>ListOfStates</name>
      <label>ListOfStates</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema4"/>
      </value>
    </variable>
  </object>
  <object id="value42" type="oblivion.db.Schema">
    <schema>
      <attribute>
        <type>java.lang.String</type>
        <name>COUNTYZONE</name>
      </attribute>
    </schema>
  </object>
  <object id="Schema5" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>CountyZoneList</name>
      <schema ref="value42"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable42" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>CountyZoneList</name>
      <label>CountyZoneList</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema5"/>
      </value>
    </variable>
  </object>
  <object id="value43" type="oblivion.db.Schema">
    <schema>
      <attribute>
        <type>java.lang.String</type>
        <name>ZONE</name>
      </attribute>
    </schema>
  </object>
  <object id="Schema6" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>ListOfZones</name>
      <schema ref="value43"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable43" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>ListOfZones</name>
      <label>ListOfZones</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema6"/>
      </value>
    </variable>
  </object>
  <object id="value44" type="oblivion.db.Schema">
    <schema>
      <attribute>
        <type>java.lang.String</type>
        <name>COUNTY</name>
      </attribute>
    </schema>
  </object>
  <object id="Schema7" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>ListOfCounties</name>
      <schema ref="value44"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable44" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>ListOfCounties</name>
      <label>ListOfCounties</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema7"/>
      </value>
    </variable>
  </object>
  <object id="variable45" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>ListOfCounties0</name>
      <label>ListOfCounties</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema7"/>
      </value>
    </variable>
  </object>
  <object id="value45" type="oblivion.db.Schema">
    <schema>
      <type>oblivion.db.io.schema.FlatSchemaSource</type>
      <source>
        <type>oblivion.io.FileSource</type>
        <source>
          <file>data\meta\Zones.schema</file>
        </source>
        <format>Whitespace</format>
      </source>
    </schema>
  </object>
  <object id="Schema8" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>Zone</name>
      <schema ref="value45"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable46" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>Zone</name>
      <label>Zone</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema8"/>
      </value>
    </variable>
  </object>
  <object id="value46" type="oblivion.db.Schema">
    <schema>
      <attribute>
        <type>java.lang.String</type>
        <name>EVENTTYPE</name>
      </attribute>
    </schema>
  </object>
  <object id="Schema9" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>CountyEventType</name>
      <schema ref="value46"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable47" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>CountyEventType</name>
      <label>CountyEventType</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema9"/>
      </value>
    </variable>
  </object>
  <object id="Schema10" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>ZoneEventType</name>
      <schema ref="value46"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable48" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>ZoneEventType</name>
      <label>ZoneEventType</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema10"/>
      </value>
    </variable>
  </object>
  <object id="value47" type="oblivion.db.Schema">
    <schema>
      <type>oblivion.db.io.schema.FlatSchemaSource</type>
      <source>
        <type>oblivion.io.FileSource</type>
        <source>
          <file>data\geo-alt\counties.schema</file>
        </source>
        <format>CSV</format>
      </source>
    </schema>
  </object>
  <object id="Schema11" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>Altcounty</name>
      <schema ref="value47"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable49" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>Altcounty</name>
      <label>Altcounty</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema11"/>
      </value>
    </variable>
  </object>
  <object id="value48" type="oblivion.db.Schema">
    <schema>
      <type>oblivion.db.io.schema.FlatSchemaSource</type>
      <source>
        <type>oblivion.io.FileSource</type>
        <source>
          <file>data\geo-alt\states.schema</file>
        </source>
        <format>CSV</format>
      </source>
    </schema>
  </object>
  <object id="Schema12" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>Altstate</name>
      <schema ref="value48"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable50" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>Altstate</name>
      <label>Altstate</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema12"/>
      </value>
    </variable>
  </object>
  <object id="value49" type="oblivion.db.Schema">
    <schema>
      <attribute>
        <type>int</type>
        <name>CountyFIPS</name>
      </attribute>
      <attribute>
        <type>double</type>
        <name>Injuries</name>
      </attribute>
      <attribute>
        <type>double</type>
        <name>Deaths</name>
      </attribute>
    </schema>
  </object>
  <object id="Schema13" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>Precalc</name>
      <schema ref="value49"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="value50" type="oblivion.db.Schema">
    <schema>
      <attribute>
        <type>java.lang.String</type>
        <name>County</name>
      </attribute>
      <attribute>
        <type>oblivion.view.cell.glyph.Glyph</type>
        <name>Shape</name>
      </attribute>
    </schema>
  </object>
  <object id="Schema14" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>CountyShape</name>
      <schema ref="value50"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable51" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>CountyShape</name>
      <label>CountyShape</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema14"/>
      </value>
    </variable>
  </object>
  <object id="value51" type="oblivion.db.Schema">
    <schema>
      <attribute>
        <type>java.lang.String</type>
        <name>Month</name>
      </attribute>
    </schema>
  </object>
  <object id="Schema15" type="oblivion.db.lex.LexicalSchema">
    <oblivion.db.lex.LexicalSchema>
      <name>Months</name>
      <schema ref="value51"/>
    </oblivion.db.lex.LexicalSchema>
  </object>
  <object id="variable52" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype24"/>
      <name>Months0</name>
      <label>Months</label>
      <value type="oblivion.db.lex.LexicalSchema">
        <oblivion.db.lex.LexicalSchema ref="Schema15"/>
      </value>
    </variable>
  </object>
  <object id="prototype25" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.lex.LexicalData</type>
      <name>LexicalData</name>
    </prototype>
  </object>
  <object id="value52" type="oblivion.db.lex.LexicalData">
    <oblivion.db.lex.LexicalData>
      <name>Properties</name>
    </oblivion.db.lex.LexicalData>
  </object>
  <object id="variable53" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype25"/>
      <name>Properties Data</name>
      <annotation>
        <description/>
      </annotation>
      <label>Properties Data</label>
      <value type="oblivion.db.lex.LexicalData">
        <oblivion.db.lex.LexicalData ref="value52"/>
      </value>
    </variable>
  </object>
  <object id="prototype26" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.lex.LexicalExpression</type>
      <name ref="value16"/>
    </prototype>
  </object>
  <object id="value53" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>GetGroupKey</name>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable54" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>GetGroupKey</name>
      <annotation>
        <description/>
      </annotation>
      <label>GetGroupKey</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="value53"/>
      </value>
    </variable>
  </object>
  <object id="value54" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>GetGroupSet</name>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable55" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>GetGroupSet</name>
      <annotation>
        <description/>
      </annotation>
      <label>GetGroupSet</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="value54"/>
      </value>
    </variable>
  </object>
  <object id="value55" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>GetRecordID</name>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable56" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>GetRecordID</name>
      <label>GetRecordID</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="value55"/>
      </value>
    </variable>
  </object>
  <object id="value56" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>GetPropertiesKey</name>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable57" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>GetPropertiesKey</name>
      <annotation>
        <description/>
      </annotation>
      <label>GetPropertiesKey</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="value56"/>
      </value>
    </variable>
  </object>
  <object id="value57" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>GetPropertiesVal</name>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable58" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>GetPropertiesVal</name>
      <label>GetPropertiesVal</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="value57"/>
      </value>
    </variable>
  </object>
  <object id="value58" type="oblivion.db.op.Expression">
    <expr kind="index">
      <op>
        <type>java.lang.String</type>
      </op>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.DataFunctions$FromLexicalData</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable53"/>
          </op>
        </expr>
      </expr>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable57"/>
          </op>
        </expr>
      </expr>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable58"/>
          </op>
        </expr>
      </expr>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.StringFunctions$ToObject</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.lang.String">
              <string>Path</string>
            </value>
          </op>
        </expr>
      </expr>
      <expr kind="value">
        <op>
          <value type="java.lang.String">
            <string ref="value16"/>
          </value>
        </op>
      </expr>
    </expr>
  </object>
  <object id="Expression0" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>GetDataPath</name>
      <ltype>java.lang.String</ltype>
      <lschema>
        <name>Empty</name>
      </lschema>
      <expression ref="value58"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable59" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>GetDataPath</name>
      <label>GetDataPath</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression0"/>
      </value>
    </variable>
  </object>
  <object id="value59" type="oblivion.db.op.Expression">
    <expr kind="attribute">
      <schema ref="value38"/>
      <op>
        <index>2</index>
      </op>
    </expr>
  </object>
  <object id="Expression1" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>States.GetState</name>
      <ltype>java.lang.String</ltype>
      <lschema ref="Schema1"/>
      <expression ref="value59"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable60" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>States.GetState</name>
      <annotation>
        <description/>
      </annotation>
      <label>States.GetState</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression1"/>
      </value>
    </variable>
  </object>
  <object id="value60" type="oblivion.db.op.Expression">
    <expr kind="attribute">
      <schema ref="value41"/>
      <op>
        <index>0</index>
      </op>
    </expr>
  </object>
  <object id="Expression2" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>ListOfStates.GetState</name>
      <ltype>java.lang.String</ltype>
      <lschema ref="Schema4"/>
      <expression ref="value60"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable61" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>ListOfStates.GetState</name>
      <label>ListOfStates.GetState</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression2"/>
      </value>
    </variable>
  </object>
  <object id="value61" type="oblivion.db.op.Expression">
    <expr kind="attribute">
      <schema ref="value42"/>
      <op>
        <index>0</index>
      </op>
    </expr>
  </object>
  <object id="Expression3" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>CountyZoneList.getCZ</name>
      <ltype>java.lang.String</ltype>
      <lschema ref="Schema5"/>
      <expression ref="value61"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable62" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>CountyZoneList.getCZ</name>
      <annotation>
        <description/>
      </annotation>
      <label>Expression.CountyZoneList</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression3"/>
      </value>
    </variable>
  </object>
  <object id="value62" type="oblivion.db.op.Expression">
    <expr kind="attribute">
      <schema ref="value37"/>
      <op>
        <index>10</index>
      </op>
    </expr>
  </object>
  <object id="Expression4" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Storm.GetDirectInjuries</name>
      <ltype>int</ltype>
      <lschema ref="Schema0"/>
      <expression ref="value62"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable63" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>Storm.GetDirectInjuries</name>
      <label>Storm.GetDirectInjuries</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression4"/>
      </value>
    </variable>
  </object>
  <object id="value63" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value39"/>
      <op>
        <name>oblivion.db.op.functions.ColorGradientFunctions$Absolute</name>
      </op>
      <expr kind="variable">
        <op>
          <variable ref="variable27"/>
        </op>
      </expr>
      <expr kind="attribute">
        <op>
          <index>8</index>
        </op>
      </expr>
    </expr>
  </object>
  <object id="Expression5" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Expression.Counties</name>
      <ltype>java.awt.Color</ltype>
      <lschema ref="Schema2"/>
      <expression ref="value63"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable64" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>Expression.Counties</name>
      <label>Expression.Counties</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression5"/>
      </value>
    </variable>
  </object>
  <object id="value64" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value37"/>
      <op>
        <name>oblivion.db.op.functions.DoubleFunctions$FromI</name>
      </op>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.IntegerFunctions$Add</name>
        </op>
        <expr kind="attribute">
          <op>
            <index>10</index>
          </op>
        </expr>
        <expr kind="attribute">
          <op>
            <index>11</index>
          </op>
        </expr>
      </expr>
    </expr>
  </object>
  <object id="Expression6" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>StormTotalInjuriesToDouble</name>
      <ltype>double</ltype>
      <lschema ref="Schema0"/>
      <expression ref="value64"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable65" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>StormTotalInjuriesToDouble</name>
      <annotation>
        <description/>
      </annotation>
      <label>StormTotalInjuriesToDouble</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression6"/>
      </value>
    </variable>
  </object>
  <object id="value65" type="oblivion.db.op.Expression">
    <expr kind="attribute">
      <schema ref="value37"/>
      <op>
        <index>0</index>
      </op>
    </expr>
  </object>
  <object id="Expression7" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Storm.GetBeginDay</name>
      <ltype>int</ltype>
      <lschema ref="Schema0"/>
      <expression ref="value65"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable66" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>Storm.GetBeginDay</name>
      <label>Storm.GetBeginDay</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression7"/>
      </value>
    </variable>
  </object>
  <object id="value66" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value37"/>
      <op>
        <name>oblivion.db.op.functions.IntegerFunctions$Add</name>
      </op>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.IntegerFunctions$Mul</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.IntegerFunctions$FromS</name>
          </op>
          <expr kind="attribute">
            <op>
              <index>3</index>
            </op>
          </expr>
        </expr>
        <expr kind="value">
          <op>
            <value type="int">
              <int>1000</int>
            </value>
          </op>
        </expr>
      </expr>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.IntegerFunctions$FromS</name>
        </op>
        <expr kind="attribute">
          <op>
            <index>8</index>
          </op>
        </expr>
      </expr>
    </expr>
  </object>
  <object id="Expression8" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Storm.CalcRealCountyFIPS</name>
      <ltype>int</ltype>
      <lschema ref="Schema0"/>
      <expression ref="value66"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable67" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>Storm.CalcRealCountyFIPS</name>
      <label>Storm.CalcRealCountyFIPS</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression8"/>
      </value>
    </variable>
  </object>
  <object id="value67" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value37"/>
      <op>
        <name>oblivion.db.op.functions.DoubleFunctions$FromI</name>
      </op>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.IntegerFunctions$Add</name>
        </op>
        <expr kind="attribute">
          <op>
            <index>12</index>
          </op>
        </expr>
        <expr kind="attribute">
          <op>
            <index>13</index>
          </op>
        </expr>
      </expr>
    </expr>
  </object>
  <object id="Expression9" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>StormTotalDeathsToDouble</name>
      <ltype>double</ltype>
      <lschema ref="Schema0"/>
      <expression ref="value67"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable68" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>StormTotalDeathsToDouble</name>
      <label>StormTotalDeathsToDouble</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression9"/>
      </value>
    </variable>
  </object>
  <object id="value68" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value37"/>
      <op>
        <name>oblivion.db.op.functions.DoubleFunctions$FromI</name>
      </op>
      <expr kind="attribute">
        <op>
          <index>13</index>
        </op>
      </expr>
    </expr>
  </object>
  <object id="Expression10" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>StormIndirectDeathsToDouble</name>
      <ltype>double</ltype>
      <lschema ref="Schema0"/>
      <expression ref="value68"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable69" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>StormIndirectDeathsToDouble</name>
      <label>StormIndirectDeathsToDouble</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression10"/>
      </value>
    </variable>
  </object>
  <object id="value69" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value37"/>
      <op>
        <name>oblivion.db.op.functions.DoubleFunctions$FromI</name>
      </op>
      <expr kind="attribute">
        <op>
          <index>12</index>
        </op>
      </expr>
    </expr>
  </object>
  <object id="Expression11" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>StormDirectDeathsToDouble</name>
      <ltype>double</ltype>
      <lschema ref="Schema0"/>
      <expression ref="value69"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable70" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>StormDirectDeathsToDouble</name>
      <label>StormDirectDeathsToDouble</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression11"/>
      </value>
    </variable>
  </object>
  <object id="value70" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value37"/>
      <op>
        <name>oblivion.db.op.functions.DoubleFunctions$FromI</name>
      </op>
      <expr kind="attribute">
        <op>
          <index>11</index>
        </op>
      </expr>
    </expr>
  </object>
  <object id="Expression12" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>StormIndirectInjuriesToDouble</name>
      <ltype>double</ltype>
      <lschema ref="Schema0"/>
      <expression ref="value70"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable71" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>StormIndirectInjuriesToDouble</name>
      <label>StormIndirectInjuriesToDouble</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression12"/>
      </value>
    </variable>
  </object>
  <object id="value71" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value37"/>
      <op>
        <name>oblivion.db.op.functions.DoubleFunctions$FromI</name>
      </op>
      <expr kind="attribute">
        <op>
          <index>10</index>
        </op>
      </expr>
    </expr>
  </object>
  <object id="Expression13" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>StormDirectInjuriesToDouble</name>
      <ltype>double</ltype>
      <lschema ref="Schema0"/>
      <expression ref="value71"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable72" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>StormDirectInjuriesToDouble</name>
      <label>StormDirectInjuriesToDouble</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression13"/>
      </value>
    </variable>
  </object>
  <object id="value72" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value37"/>
      <op>
        <name>oblivion.db.op.functions.DoubleFunctions$FromI</name>
      </op>
      <expr kind="attribute">
        <op>
          <index>0</index>
        </op>
      </expr>
    </expr>
  </object>
  <object id="Expression14" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>StormStartDayToDouble</name>
      <ltype>double</ltype>
      <lschema ref="Schema0"/>
      <expression ref="value72"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable73" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>StormStartDayToDouble</name>
      <label>StormStartDayToDouble</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression14"/>
      </value>
    </variable>
  </object>
  <object id="value73" type="oblivion.db.op.Expression">
    <expr kind="attribute">
      <schema ref="value48"/>
      <op>
        <index>3</index>
      </op>
    </expr>
  </object>
  <object id="Expression15" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Altstate.State</name>
      <ltype>java.lang.String</ltype>
      <lschema ref="Schema12"/>
      <expression ref="value73"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable74" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>Altstate.State</name>
      <annotation>
        <description/>
      </annotation>
      <label>Altstate.State</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression15"/>
      </value>
    </variable>
  </object>
  <object id="value74" type="oblivion.db.op.Expression">
    <expr kind="attribute">
      <schema ref="value47"/>
      <op>
        <index>4</index>
      </op>
    </expr>
  </object>
  <object id="Expression16" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Altcounty.County</name>
      <ltype>java.lang.String</ltype>
      <lschema ref="Schema11"/>
      <expression ref="value74"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable75" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>Altcounty.County</name>
      <annotation>
        <description/>
      </annotation>
      <label>Altcounty.County</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression16"/>
      </value>
    </variable>
  </object>
  <object id="value75" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema>
        <attribute>
          <type>java.lang.Object</type>
          <name>Key</name>
        </attribute>
        <attribute>
          <type>oblivion.db.Data</type>
          <name>Set</name>
        </attribute>
      </schema>
      <op>
        <name>oblivion.db.op.functions.GeoShapeFunctions$Invoke</name>
      </op>
      <expr kind="constant">
        <op>
          <type>oblivion.db.lex.LexicalExpression</type>
          <family>None</family>
          <name>None</name>
        </op>
      </expr>
    </expr>
  </object>
  <object id="Expression17" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Expression.Group</name>
      <ltype>oblivion.geo.shape.GeoShape</ltype>
      <lschema>
        <name>Group</name>
      </lschema>
      <expression ref="value75"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="value76" type="oblivion.db.op.ExpressionFilter">
    <filter>
      <expr kind="function">
        <schema ref="value38"/>
        <op>
          <name>oblivion.db.op.functions.SelectionFunctions$SelectionGet</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable9"/>
          </op>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.IntegerFunctions$Invoke</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable56"/>
            </op>
          </expr>
        </expr>
      </expr>
    </filter>
  </object>
  <object id="Filter0" type="oblivion.db.lex.LexicalFilter">
    <oblivion.db.lex.LexicalFilter>
      <name>Filter.States</name>
      <lschema ref="Schema1"/>
      <filter ref="value76"/>
    </oblivion.db.lex.LexicalFilter>
  </object>
  <object id="prototype27" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.lex.LexicalFilter</type>
      <name ref="value16"/>
    </prototype>
  </object>
  <object id="variable76" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype27"/>
      <name>Filter.States</name>
      <annotation>
        <description/>
      </annotation>
      <label>Filter.States</label>
      <value type="oblivion.db.lex.LexicalFilter">
        <oblivion.db.lex.LexicalFilter ref="Filter0"/>
      </value>
    </variable>
  </object>
  <object id="value77" type="oblivion.db.op.ExpressionFilter">
    <filter>
      <expr kind="function">
        <schema ref="value39"/>
        <op>
          <name>oblivion.db.op.functions.SelectionFunctions$IsSelected</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable17"/>
          </op>
        </expr>
      </expr>
    </filter>
  </object>
  <object id="Filter1" type="oblivion.db.lex.LexicalFilter">
    <oblivion.db.lex.LexicalFilter>
      <name>Filter.Counties</name>
      <lschema ref="Schema2"/>
      <filter ref="value77"/>
    </oblivion.db.lex.LexicalFilter>
  </object>
  <object id="variable77" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype27"/>
      <name>Filter.Counties</name>
      <annotation>
        <description/>
      </annotation>
      <label>Filter.Counties</label>
      <value type="oblivion.db.lex.LexicalFilter">
        <oblivion.db.lex.LexicalFilter ref="Filter1"/>
      </value>
    </variable>
  </object>
  <object id="variable78" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype27"/>
      <name>Filter.Counties1</name>
      <label>Filter.Counties</label>
      <value type="oblivion.db.lex.LexicalFilter">
        <oblivion.db.lex.LexicalFilter ref="Filter1"/>
      </value>
    </variable>
  </object>
  <object id="value78" type="oblivion.db.op.ExpressionFilter">
    <filter>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.lang.String">
              <string>OK</string>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.lang.String">
              <string ref="value16"/>
            </value>
          </op>
        </expr>
      </expr>
    </filter>
  </object>
  <object id="Filter2" type="oblivion.db.lex.LexicalFilter">
    <oblivion.db.lex.LexicalFilter>
      <name>Filter.Zones</name>
      <lschema ref="Schema3"/>
      <filter ref="value78"/>
    </oblivion.db.lex.LexicalFilter>
  </object>
  <object id="variable79" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype27"/>
      <name>Filter.Zones</name>
      <annotation>
        <description/>
      </annotation>
      <label>Filter.Zones</label>
      <value type="oblivion.db.lex.LexicalFilter">
        <oblivion.db.lex.LexicalFilter ref="Filter2"/>
      </value>
    </variable>
  </object>
  <object id="value79" type="oblivion.db.op.ExpressionFilter">
    <filter>
      <expr kind="function">
        <schema ref="value39"/>
        <op>
          <name>oblivion.db.op.functions.BooleanFunctions$Or</name>
          <count>56</count>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>0</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>AK</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>1</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>AL</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>2</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>AR</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>3</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>AS</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>4</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string ref="value17"/>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>5</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>CA</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>6</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>CO</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>7</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>CT</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>8</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>DC</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>9</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>DE</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>10</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>FL</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>11</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>GA</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>12</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>GU</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>13</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>IA</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>14</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>ID</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>15</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>IL</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>16</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>IN</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>17</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>KS</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>18</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>KY</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>19</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>LA</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>20</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>MA</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>21</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>ME</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>22</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>MI</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>23</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>MN</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>24</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>MO</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>25</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>MS</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>26</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>MT</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>27</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>NC</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>28</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>ND</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>29</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>NE</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>30</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>NH</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>31</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>NJ</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>32</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>NM</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>33</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>NV</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>34</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>NY</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>35</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>OH</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>36</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>OK</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>37</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>OR</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>38</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>PA</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>39</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>PR</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>40</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>RI</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>41</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>SD</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>42</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>TN</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>43</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>UT</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>44</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>VA</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>45</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>VI</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>46</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>VT</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>47</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>WA</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>48</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>WI</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>49</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>WV</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>50</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>WY</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>51</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>SC</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>52</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>MD</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>53</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>TX</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>54</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string ref="value16"/>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable9"/>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="int">
                  <int>55</int>
                </value>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>2</index>
              </op>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>HI</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
      </expr>
    </filter>
  </object>
  <object id="Filter3" type="oblivion.db.lex.LexicalFilter">
    <oblivion.db.lex.LexicalFilter>
      <name>Filter.CountiesOfState</name>
      <lschema ref="Schema2"/>
      <filter ref="value79"/>
    </oblivion.db.lex.LexicalFilter>
  </object>
  <object id="variable80" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype27"/>
      <name>Filter.CountiesOfState</name>
      <label>Filter.CountiesOfState</label>
      <value type="oblivion.db.lex.LexicalFilter">
        <oblivion.db.lex.LexicalFilter ref="Filter3"/>
      </value>
    </variable>
  </object>
  <object id="value80" type="oblivion.db.op.ExpressionFilter">
    <filter>
      <expr kind="function">
        <schema ref="value47"/>
        <op>
          <name>oblivion.db.op.functions.StringFunctions$CompareNEQ</name>
        </op>
        <expr kind="attribute">
          <op>
            <index>5</index>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.lang.String">
              <string ref="value16"/>
            </value>
          </op>
        </expr>
      </expr>
    </filter>
  </object>
  <object id="Filter4" type="oblivion.db.lex.LexicalFilter">
    <oblivion.db.lex.LexicalFilter>
      <name>Filter.Altcounty</name>
      <lschema ref="Schema11"/>
      <filter ref="value80"/>
    </oblivion.db.lex.LexicalFilter>
  </object>
  <object id="variable81" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype27"/>
      <name>Filter.Altcounty</name>
      <label>Filter.Altcounty</label>
      <value type="oblivion.db.lex.LexicalFilter">
        <oblivion.db.lex.LexicalFilter ref="Filter4"/>
      </value>
    </variable>
  </object>
  <object id="value81" type="oblivion.db.op.ExpressionFilter">
    <filter>
      <expr kind="value">
        <schema ref="value37"/>
        <op>
          <value type="boolean">
            <boolean>true</boolean>
          </value>
        </op>
      </expr>
    </filter>
  </object>
  <object id="Filter5" type="oblivion.db.lex.LexicalFilter">
    <oblivion.db.lex.LexicalFilter>
      <name>Filter.Storm.Counties</name>
      <lschema ref="Schema0"/>
      <filter ref="value81"/>
    </oblivion.db.lex.LexicalFilter>
  </object>
  <object id="variable82" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype27"/>
      <name>Filter.Storm.Counties</name>
      <label>Filter.Storm.Counties</label>
      <value type="oblivion.db.lex.LexicalFilter">
        <oblivion.db.lex.LexicalFilter ref="Filter5"/>
      </value>
    </variable>
  </object>
  <object id="value82" type="oblivion.db.op.ExpressionFilter">
    <filter>
      <expr kind="function">
        <schema ref="value37"/>
        <op>
          <name>oblivion.db.op.functions.BooleanFunctions$And</name>
          <count>3</count>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.RangeDoubleFunctions$Contains</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable21"/>
            </op>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.DoubleFunctions$Invoke</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable73"/>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$Or</name>
            <count>12</count>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>0</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>January</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>1</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>February</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>2</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>March</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>3</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>April</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>4</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>May</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>5</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>June</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>6</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>July</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>7</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>August</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>8</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>September</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>9</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>October</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>10</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>November</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable35"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>11</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>5</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>December</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.BooleanFunctions$Or</name>
            <count>10</count>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable36"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>9</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>6</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>Tornado</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable36"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>8</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>6</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>Thunderstorm Wind</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable36"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>7</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>6</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>Lightning</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable36"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>6</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>6</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>Heavy Rain</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable36"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>5</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>6</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>Hail</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable36"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>4</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>6</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>Funnel Cloud</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable36"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>3</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>6</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>Flood</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable36"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>2</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>6</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>Flash Flood</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable36"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>1</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>6</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>Dust Storm</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.BooleanFunctions$And</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
              </op>
              <expr kind="variable">
                <op>
                  <variable ref="variable36"/>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="int">
                    <int>0</int>
                  </value>
                </op>
              </expr>
            </expr>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
              </op>
              <expr kind="attribute">
                <op>
                  <index>6</index>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>Dust Devil</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
        </expr>
      </expr>
    </filter>
  </object>
  <object id="Filter6" type="oblivion.db.lex.LexicalFilter">
    <oblivion.db.lex.LexicalFilter>
      <name>Filter.Storm</name>
      <lschema ref="Schema0"/>
      <filter ref="value82"/>
    </oblivion.db.lex.LexicalFilter>
  </object>
  <object id="variable83" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype27"/>
      <name>Filter.Storm.Date</name>
      <label>Filter.Storm.Date</label>
      <value type="oblivion.db.lex.LexicalFilter">
        <oblivion.db.lex.LexicalFilter ref="Filter6"/>
      </value>
    </variable>
  </object>
  <object id="value83" type="oblivion.db.op.ExpressionFilter">
    <filter>
      <expr kind="function">
        <schema ref="value47"/>
        <op>
          <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
        </op>
        <expr kind="attribute">
          <op>
            <index>3</index>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.lang.String">
              <string>OK</string>
            </value>
          </op>
        </expr>
      </expr>
    </filter>
  </object>
  <object id="Filter7" type="oblivion.db.lex.LexicalFilter">
    <oblivion.db.lex.LexicalFilter>
      <name>Filter.Altcounty.Oklahoma</name>
      <lschema ref="Schema11"/>
      <filter ref="value83"/>
    </oblivion.db.lex.LexicalFilter>
  </object>
  <object id="variable84" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype27"/>
      <name>Filter.Altcounty.Oklahoma</name>
      <annotation>
        <description/>
      </annotation>
      <label>Filter.Altcounty.Oklahoma</label>
      <value type="oblivion.db.lex.LexicalFilter">
        <oblivion.db.lex.LexicalFilter ref="Filter7"/>
      </value>
    </variable>
  </object>
  <object id="value84" type="oblivion.db.op.ExpressionFilter">
    <filter>
      <expr kind="function">
        <schema ref="value47"/>
        <op>
          <name>oblivion.db.op.functions.StringFunctions$CompareEQ</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.lang.String">
              <string ref="value16"/>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.lang.String">
              <string ref="value16"/>
            </value>
          </op>
        </expr>
      </expr>
    </filter>
  </object>
  <object id="Filter8" type="oblivion.db.lex.LexicalFilter">
    <oblivion.db.lex.LexicalFilter>
      <name>Filter.Altcounty.Selection</name>
      <lschema ref="Schema11"/>
      <filter ref="value84"/>
    </oblivion.db.lex.LexicalFilter>
  </object>
  <object id="variable85" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype27"/>
      <name>Filter.Altcounty.Selection</name>
      <annotation>
        <description/>
      </annotation>
      <label>Filter.Altcounty.Selection</label>
      <value type="oblivion.db.lex.LexicalFilter">
        <oblivion.db.lex.LexicalFilter ref="Filter8"/>
      </value>
    </variable>
  </object>
  <object id="value85" type="oblivion.db.op.ExpressionFilter">
    <filter>
      <expr kind="function">
        <schema>
          <attribute>
            <type>java.lang.Object</type>
            <name>Key</name>
          </attribute>
          <attribute>
            <type>oblivion.db.Data</type>
            <name>Set</name>
          </attribute>
        </schema>
        <op>
          <name>oblivion.db.op.functions.SelectionFunctions$IsSelected</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable17"/>
          </op>
        </expr>
      </expr>
    </filter>
  </object>
  <object id="Filter9" type="oblivion.db.lex.LexicalFilter">
    <oblivion.db.lex.LexicalFilter>
      <name>Filter.Group</name>
      <lschema>
        <name>Group</name>
      </lschema>
      <filter ref="value85"/>
    </oblivion.db.lex.LexicalFilter>
  </object>
  <object id="value86" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <schema ref="value38"/>
        <op>
          <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#ffffff</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#000000</color>
            </value>
          </op>
        </expr>
        <expr kind="attribute">
          <op>
            <index>0</index>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection0" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.States</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema1"/>
      <projection ref="value86"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="prototype28" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.lex.LexicalProjection</type>
      <name ref="value16"/>
    </prototype>
  </object>
  <object id="variable86" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.States</name>
      <annotation>
        <description/>
      </annotation>
      <label>Projection.States</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection0"/>
      </value>
    </variable>
  </object>
  <object id="value87" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <op>
          <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000000</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000083</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.geo.shape.GeoShape"/>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection1" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Zones45</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema3"/>
      <projection>
        <expr kind="function">
          <op>
            <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
          </op>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000000</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000083</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="oblivion.geo.shape.GeoShape"/>
            </op>
          </expr>
        </expr>
      </projection>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="value88" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <op>
          <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000000</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000083</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.geo.shape.GeoShape"/>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection2" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Zones46</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema3"/>
      <projection>
        <expr kind="function">
          <op>
            <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
          </op>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000000</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000083</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="oblivion.geo.shape.GeoShape"/>
            </op>
          </expr>
        </expr>
      </projection>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="value89" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <op>
          <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000000</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000083</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.geo.shape.GeoShape"/>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection3" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Zones47</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema3"/>
      <projection>
        <expr kind="function">
          <op>
            <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
          </op>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000000</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000083</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="oblivion.geo.shape.GeoShape"/>
            </op>
          </expr>
        </expr>
      </projection>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="value90" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <op>
          <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000000</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000083</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.geo.shape.GeoShape"/>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection4" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Zones48</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema3"/>
      <projection>
        <expr kind="function">
          <op>
            <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
          </op>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000000</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000083</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="oblivion.geo.shape.GeoShape"/>
            </op>
          </expr>
        </expr>
      </projection>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="value91" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <op>
          <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000000</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000083</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.geo.shape.GeoShape"/>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection5" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Zones49</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema3"/>
      <projection>
        <expr kind="function">
          <op>
            <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
          </op>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000000</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000083</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="oblivion.geo.shape.GeoShape"/>
            </op>
          </expr>
        </expr>
      </projection>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="value92" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <op>
          <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000000</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000083</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.geo.shape.GeoShape"/>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection6" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Zones50</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema3"/>
      <projection>
        <expr kind="function">
          <op>
            <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
          </op>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000000</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000083</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="oblivion.geo.shape.GeoShape"/>
            </op>
          </expr>
        </expr>
      </projection>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="value93" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <op>
          <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000000</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#00000083</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.geo.shape.GeoShape"/>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection7" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Zones51</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema3"/>
      <projection>
        <expr kind="function">
          <op>
            <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
          </op>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000000</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000083</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="oblivion.geo.shape.GeoShape"/>
            </op>
          </expr>
        </expr>
      </projection>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="value94" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Zones51</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema3"/>
      <projection>
        <expr kind="function">
          <op>
            <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
          </op>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000000</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="java.awt.Color">
                <color>#00000083</color>
              </value>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="oblivion.geo.shape.GeoShape"/>
            </op>
          </expr>
        </expr>
      </projection>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="variable87" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.Zones</name>
      <annotation>
        <description/>
      </annotation>
      <label>Projection.Zones</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection>
          <name>Projection.Zones51</name>
          <loschema>
            <name>Glyph.Plane2D</name>
          </loschema>
          <lischema ref="Schema3"/>
          <projection>
            <expr kind="function">
              <op>
                <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
              </op>
              <expr kind="value">
                <op>
                  <value type="java.awt.Color">
                    <color>#00000000</color>
                  </value>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.awt.Color">
                    <color>#00000083</color>
                  </value>
                </op>
              </expr>
              <expr kind="value">
                <op>
                  <value type="oblivion.geo.shape.GeoShape"/>
                </op>
              </expr>
            </expr>
          </projection>
        </oblivion.db.lex.LexicalProjection>
      </value>
    </variable>
  </object>
  <object id="value95" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="attribute">
        <schema ref="value38"/>
        <op>
          <index>6</index>
        </op>
      </expr>
    </projection>
  </object>
  <object id="Projection8" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.ListOfStates</name>
      <loschema ref="Schema4"/>
      <lischema ref="Schema1"/>
      <projection ref="value95"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="variable88" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.ListOfStates</name>
      <label>Projection.ListOfStates</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection8"/>
      </value>
    </variable>
  </object>
  <object id="value96" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.ClassFunctions$Name</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.lang.Class">
              <type>java.lang.Object</type>
            </value>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection9" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.ListOfZones</name>
      <loschema ref="Schema6"/>
      <lischema ref="Schema3"/>
      <projection ref="value96"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="value97" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="attribute">
        <schema ref="value39"/>
        <op>
          <index>4</index>
        </op>
      </expr>
    </projection>
  </object>
  <object id="Projection10" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.CountiesList</name>
      <loschema ref="Schema7"/>
      <lischema ref="Schema2"/>
      <projection ref="value97"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="variable89" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.Counties0</name>
      <annotation>
        <description/>
      </annotation>
      <label>Projection.Counties0</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection10"/>
      </value>
    </variable>
  </object>
  <object id="variable90" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.CountiesList</name>
      <label>Projection.CountiesList</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection10"/>
      </value>
    </variable>
  </object>
  <object id="value98" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <schema ref="value39"/>
        <op>
          <name>oblivion.db.op.functions.StringFunctions$Cond</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable13"/>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="int">
                <int>0</int>
              </value>
            </op>
          </expr>
        </expr>
        <expr kind="attribute">
          <op>
            <index>4</index>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.lang.String">
              <string ref="value16"/>
            </value>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection11" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.CountiesList0</name>
      <loschema ref="Schema7"/>
      <lischema ref="Schema2"/>
      <projection ref="value98"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="variable91" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.CountiesList0</name>
      <annotation>
        <description/>
      </annotation>
      <label>Projection.CountiesList0</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection11"/>
      </value>
    </variable>
  </object>
  <object id="value99" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <schema ref="value45"/>
        <op>
          <name>oblivion.db.op.functions.StringFunctions$Cond</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable13"/>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="int">
                <int>1</int>
              </value>
            </op>
          </expr>
        </expr>
        <expr kind="attribute">
          <op>
            <index>6</index>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.lang.String">
              <string ref="value16"/>
            </value>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection12" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.ZoneList</name>
      <loschema ref="Schema6"/>
      <lischema ref="Schema8"/>
      <projection ref="value99"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="variable92" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.ZoneList</name>
      <label>Projection.ZoneList</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection12"/>
      </value>
    </variable>
  </object>
  <object id="value100" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <schema ref="value48"/>
        <op>
          <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
        </op>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#ffffff</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#000000</color>
            </value>
          </op>
        </expr>
        <expr kind="attribute">
          <op>
            <index>5</index>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection13" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Altstate</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema12"/>
      <projection ref="value100"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="variable93" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.Altstate</name>
      <annotation>
        <description/>
      </annotation>
      <label>Projection.Altstate</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection13"/>
      </value>
    </variable>
  </object>
  <object id="value101" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="attribute">
        <schema ref="value48"/>
        <op>
          <index>3</index>
        </op>
      </expr>
    </projection>
  </object>
  <object id="Projection14" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.AltstateList</name>
      <loschema ref="Schema4"/>
      <lischema ref="Schema12"/>
      <projection ref="value101"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="variable94" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.Altstate0</name>
      <label>Projection.Altstate0</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection14"/>
      </value>
    </variable>
  </object>
  <object id="value102" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="attribute">
        <schema ref="value47"/>
        <op>
          <index>4</index>
        </op>
      </expr>
    </projection>
  </object>
  <object id="Projection15" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.AltcountyList</name>
      <loschema ref="Schema7"/>
      <lischema ref="Schema11"/>
      <projection ref="value102"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="variable95" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.Altcounty1</name>
      <label>Projection.Altcounty1</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection15"/>
      </value>
    </variable>
  </object>
  <object id="value103" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="value">
        <schema>
          <attribute>
            <type>java.lang.Object</type>
            <name>Key</name>
          </attribute>
          <attribute>
            <type>oblivion.db.Data</type>
            <name>Set</name>
          </attribute>
        </schema>
        <op>
          <value type="java.lang.String">
            <string ref="value16"/>
          </value>
        </op>
      </expr>
      <expr kind="function">
        <schema>
          <attribute>
            <type>java.lang.Object</type>
            <name>Key</name>
          </attribute>
          <attribute>
            <type>oblivion.db.Data</type>
            <name>Set</name>
          </attribute>
        </schema>
        <op>
          <name>oblivion.view.cell.glyph.Functions$CreateBar</name>
        </op>
        <expr kind="value">
          <op>
            <value type="int">
              <int>0</int>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="int">
              <int>0</int>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#000000</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#000000</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="double">
              <double>0.0</double>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#000000</color>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="double">
              <double>0.0</double>
            </value>
          </op>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#000000</color>
            </value>
          </op>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection16" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.GroupCountyShape</name>
      <loschema ref="Schema14"/>
      <lischema>
        <name>Group</name>
      </lischema>
      <projection ref="value103"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="value104" type="oblivion.db.op.ExpressionSort">
    <sort>
      <expr kind="function">
        <schema ref="value38"/>
        <op>
          <name>oblivion.db.op.functions.StringFunctions$Increasing</name>
        </op>
        <expr kind="attribute">
          <op>
            <index>6</index>
          </op>
        </expr>
      </expr>
    </sort>
  </object>
  <object id="Sort0" type="oblivion.db.lex.LexicalSort">
    <oblivion.db.lex.LexicalSort>
      <name>Sort.States</name>
      <lschema ref="Schema1"/>
      <sort ref="value104"/>
    </oblivion.db.lex.LexicalSort>
  </object>
  <object id="prototype29" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.lex.LexicalSort</type>
      <name ref="value16"/>
    </prototype>
  </object>
  <object id="variable96" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype29"/>
      <name>Sort.States</name>
      <annotation>
        <description/>
      </annotation>
      <label>Sort.States</label>
      <value type="oblivion.db.lex.LexicalSort">
        <oblivion.db.lex.LexicalSort ref="Sort0"/>
      </value>
    </variable>
  </object>
  <object id="value105" type="oblivion.db.op.ExpressionSort">
    <sort>
      <expr kind="function">
        <schema ref="value39"/>
        <op>
          <name>oblivion.db.op.functions.StringFunctions$Increasing</name>
        </op>
        <expr kind="attribute">
          <op>
            <index>4</index>
          </op>
        </expr>
      </expr>
    </sort>
  </object>
  <object id="Sort1" type="oblivion.db.lex.LexicalSort">
    <oblivion.db.lex.LexicalSort>
      <name>Sort.Counties</name>
      <lschema ref="Schema2"/>
      <sort ref="value105"/>
    </oblivion.db.lex.LexicalSort>
  </object>
  <object id="variable97" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype29"/>
      <name>Sort.Counties</name>
      <label>Sort.Counties</label>
      <value type="oblivion.db.lex.LexicalSort">
        <oblivion.db.lex.LexicalSort ref="Sort1"/>
      </value>
    </variable>
  </object>
  <object id="value106" type="oblivion.db.op.ExpressionSort">
    <sort>
      <expr kind="function">
        <schema ref="value48"/>
        <op>
          <name>oblivion.db.op.functions.StringFunctions$Increasing</name>
        </op>
        <expr kind="attribute">
          <op>
            <index>3</index>
          </op>
        </expr>
      </expr>
    </sort>
  </object>
  <object id="Sort2" type="oblivion.db.lex.LexicalSort">
    <oblivion.db.lex.LexicalSort>
      <name>Sort.Altstate</name>
      <lschema ref="Schema12"/>
      <sort ref="value106"/>
    </oblivion.db.lex.LexicalSort>
  </object>
  <object id="variable98" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype29"/>
      <name>Sort.Altstate</name>
      <annotation>
        <description/>
      </annotation>
      <label>Sort.Altstate</label>
      <value type="oblivion.db.lex.LexicalSort">
        <oblivion.db.lex.LexicalSort ref="Sort2"/>
      </value>
    </variable>
  </object>
  <object id="value107" type="oblivion.db.op.ExpressionSort">
    <sort>
      <expr kind="function">
        <schema>
          <attribute>
            <type>java.lang.Object</type>
            <name>Key</name>
          </attribute>
          <attribute>
            <type>oblivion.db.Data</type>
            <name>Set</name>
          </attribute>
        </schema>
        <op>
          <name>oblivion.db.op.functions.ObjectFunctions$Increasing</name>
        </op>
        <expr kind="attribute">
          <op>
            <index>0</index>
          </op>
        </expr>
      </expr>
    </sort>
  </object>
  <object id="Sort3" type="oblivion.db.lex.LexicalSort">
    <oblivion.db.lex.LexicalSort>
      <name>Sort.Group</name>
      <lschema>
        <name>Group</name>
      </lschema>
      <sort ref="value107"/>
    </oblivion.db.lex.LexicalSort>
  </object>
  <object id="variable99" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype29"/>
      <name>Sort.Group</name>
      <label>Sort.Group</label>
      <value type="oblivion.db.lex.LexicalSort">
        <oblivion.db.lex.LexicalSort ref="Sort3"/>
      </value>
    </variable>
  </object>
  <object id="value108" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value37"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$FromFlatSource</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$Add</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                </op>
                <expr kind="variable">
                  <op>
                    <variable ref="variable59"/>
                  </op>
                </expr>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>data/sets/Stormdata_2012OK-2.csv</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.db.RecordFormat">
              <recordformat>CSV</recordformat>
            </value>
          </op>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SchemaFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable37"/>
            </op>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info0" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.Storm</name>
      <lschema ref="Schema0"/>
      <info ref="value108"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="prototype30" type="oblivion.lp.Prototype">
    <prototype>
      <type>oblivion.db.lex.LexicalInfo</type>
      <name ref="value16"/>
    </prototype>
  </object>
  <object id="variable100" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Storm</name>
      <annotation>
        <description/>
      </annotation>
      <label>Info.Storm</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info0"/>
      </value>
    </variable>
  </object>
  <object id="variable101" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Storm0</name>
      <label>Info.Storm</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info0"/>
      </value>
    </variable>
  </object>
  <object id="value109" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value38"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Merge</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromShapefileSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo/states.shp</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromDbfSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo/states.dbf</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info1" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.States</name>
      <lschema ref="Schema1"/>
      <info ref="value109"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable102" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.States</name>
      <annotation>
        <description/>
      </annotation>
      <label>Info.States</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info1"/>
      </value>
    </variable>
  </object>
  <object id="value110" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value39"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Merge</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromShapefileSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo/counties.shp</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromDbfSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo/counties.dbf</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info2" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.Counties</name>
      <lschema ref="Schema2"/>
      <info ref="value110"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable103" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Counties</name>
      <annotation>
        <description/>
      </annotation>
      <label>Info.Counties</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info2"/>
      </value>
    </variable>
  </object>
  <object id="value111" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Merge</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromShapefileSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo/zones.shp</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromDbfSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo/zones.dbf</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info3" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.Zones</name>
      <lschema ref="Schema3"/>
      <info ref="value111"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable104" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Zones</name>
      <label>Info.Zones</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info3"/>
      </value>
    </variable>
  </object>
  <object id="variable105" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Zones0</name>
      <label>Info.Zones</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info3"/>
      </value>
    </variable>
  </object>
  <object id="value112" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value42"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$FromFlatSource</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$Add</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                </op>
                <expr kind="variable">
                  <op>
                    <variable ref="variable59"/>
                  </op>
                </expr>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>data/sets/CountyZoneList.csv</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.db.RecordFormat">
              <recordformat>CSV</recordformat>
            </value>
          </op>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SchemaFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable42"/>
            </op>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info4" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.CountyZoneList</name>
      <lschema ref="Schema5"/>
      <info ref="value112"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable106" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.CountyZoneList</name>
      <annotation>
        <description/>
      </annotation>
      <label>Info.CountyZoneList</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info4"/>
      </value>
    </variable>
  </object>
  <object id="value113" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value45"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Merge</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromShapefileSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo/zones.shp</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromDbfSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo/zones.dbf</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info5" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.Zone</name>
      <lschema ref="Schema8"/>
      <info ref="value113"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable107" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Zone</name>
      <label>Info.Zone</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info5"/>
      </value>
    </variable>
  </object>
  <object id="value114" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value46"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$FromFlatSource</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$Add</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                </op>
                <expr kind="variable">
                  <op>
                    <variable ref="variable59"/>
                  </op>
                </expr>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>data/sets/countytypes.csv</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.db.RecordFormat">
              <recordformat>CSV</recordformat>
            </value>
          </op>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SchemaFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable47"/>
            </op>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info6" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.CountyEventType</name>
      <lschema ref="Schema9"/>
      <info ref="value114"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable108" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.CountyEventType</name>
      <label>Info.CountyEventType</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info6"/>
      </value>
    </variable>
  </object>
  <object id="value115" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value46"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$FromFlatSource</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$Add</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                </op>
                <expr kind="variable">
                  <op>
                    <variable ref="variable59"/>
                  </op>
                </expr>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>data/sets/zonetypes.csv</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.db.RecordFormat">
              <recordformat>CSV</recordformat>
            </value>
          </op>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SchemaFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable48"/>
            </op>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info7" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.ZoneEventType</name>
      <lschema ref="Schema10"/>
      <info ref="value115"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable109" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.ZoneEventType</name>
      <label>Info.ZoneEventType</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info7"/>
      </value>
    </variable>
  </object>
  <object id="value116" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value37"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Filter2</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable100"/>
          </op>
        </expr>
        <expr kind="variable">
          <op>
            <variable ref="variable83"/>
          </op>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info8" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.Storm.Filtered</name>
      <lschema ref="Schema0"/>
      <info ref="value116"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable110" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Storm.Filtered</name>
      <label>Info.Storm.Filtered</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info8"/>
      </value>
    </variable>
  </object>
  <object id="value117" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema>
          <attribute>
            <type>java.lang.Object</type>
            <name>Key</name>
          </attribute>
          <attribute>
            <type>oblivion.db.Data</type>
            <name>Set</name>
          </attribute>
        </schema>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Groups</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable110"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable67"/>
            </op>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info9" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Group.StormsByCounty</name>
      <lschema>
        <name>Group</name>
      </lschema>
      <info ref="value117"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable111" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Group.StormsByCounty</name>
      <annotation>
        <description/>
      </annotation>
      <label>Group.StormsByCounty</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info9"/>
      </value>
    </variable>
  </object>
  <object id="value118" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value47"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Merge</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromDbfSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromZipFileEntry</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo-alt/counties.zip</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>counties/counties.dbf</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromShapefileSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromZipFileEntry</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo-alt/counties.zip</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>counties/counties.shp</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info10" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.Altcounty.Raw</name>
      <lschema ref="Schema11"/>
      <info ref="value118"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable112" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Altcounty.Raw</name>
      <label>Info.Altcounty.Raw</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info10"/>
      </value>
    </variable>
  </object>
  <object id="value119" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value48"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Merge</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromDbfSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromZipFileEntry</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo-alt/states.zip</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>states/states.dbf</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromShapefileSource</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.SourceFunctions$FromZipFileEntry</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Add</name>
                </op>
                <expr kind="function">
                  <op>
                    <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                  </op>
                  <expr kind="variable">
                    <op>
                      <variable ref="variable59"/>
                    </op>
                  </expr>
                </expr>
                <expr kind="value">
                  <op>
                    <value type="java.lang.String">
                      <string>data/geo-alt/states.zip</string>
                    </value>
                  </op>
                </expr>
              </expr>
            </expr>
            <expr kind="value">
              <op>
                <value type="java.lang.String">
                  <string>states/states.shp</string>
                </value>
              </op>
            </expr>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info11" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.Altstate</name>
      <lschema ref="Schema12"/>
      <info ref="value119"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable113" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Altstate</name>
      <label>Info.Altstate</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info11"/>
      </value>
    </variable>
  </object>
  <object id="value120" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value47"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Filter2</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable112"/>
          </op>
        </expr>
        <expr kind="variable">
          <op>
            <variable ref="variable81"/>
          </op>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info12" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.Altcounty.Filtered</name>
      <lschema ref="Schema11"/>
      <info ref="value120"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable114" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Altcounty</name>
      <annotation>
        <description/>
      </annotation>
      <label>Info.Altcounty</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info12"/>
      </value>
    </variable>
  </object>
  <object id="value121" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value47"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Filter2</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable114"/>
          </op>
        </expr>
        <expr kind="variable">
          <op>
            <variable ref="variable84"/>
          </op>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info13" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.Altcounty.FilteredOklahoma</name>
      <lschema ref="Schema11"/>
      <info ref="value121"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable115" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Altcounty.FilteredOklahoma</name>
      <label>Info.Altcounty.FilteredOklahoma</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info13"/>
      </value>
    </variable>
  </object>
  <object id="value122" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema>
          <attribute>
            <type>java.lang.Object</type>
            <name>Key</name>
          </attribute>
          <attribute>
            <type>oblivion.db.Data</type>
            <name>Set</name>
          </attribute>
        </schema>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Groups</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable113"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable74"/>
            </op>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info14" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>States.Group.State</name>
      <lschema>
        <name>Group</name>
      </lschema>
      <info ref="value122"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable116" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>States.Group.State</name>
      <label>States.Group.State</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info14"/>
      </value>
    </variable>
  </object>
  <object id="value123" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema>
          <attribute>
            <type>java.lang.Object</type>
            <name>Key</name>
          </attribute>
          <attribute>
            <type>oblivion.db.Data</type>
            <name>Set</name>
          </attribute>
        </schema>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$Groups</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable115"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable75"/>
            </op>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info15" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>States.Group.County</name>
      <lschema>
        <name>Group</name>
      </lschema>
      <info ref="value123"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable117" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>States.Group.County</name>
      <annotation>
        <description/>
      </annotation>
      <label>States.Group.County</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info15"/>
      </value>
    </variable>
  </object>
  <object id="value124" type="oblivion.db.op.ExpressionInfo">
    <info>
      <expr kind="function">
        <schema ref="value51"/>
        <op>
          <name>oblivion.db.op.functions.DataFunctions$FromFlatSource</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SourceFunctions$FromFile</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.FileFunctions$FilePath</name>
            </op>
            <expr kind="function">
              <op>
                <name>oblivion.db.op.functions.StringFunctions$Add</name>
              </op>
              <expr kind="function">
                <op>
                  <name>oblivion.db.op.functions.StringFunctions$Invoke</name>
                </op>
                <expr kind="variable">
                  <op>
                    <variable ref="variable59"/>
                  </op>
                </expr>
              </expr>
              <expr kind="value">
                <op>
                  <value type="java.lang.String">
                    <string>data/sets/Months.txt</string>
                  </value>
                </op>
              </expr>
            </expr>
          </expr>
        </expr>
        <expr kind="value">
          <op>
            <value type="oblivion.db.RecordFormat">
              <recordformat>Whitespace</recordformat>
            </value>
          </op>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.SchemaFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable52"/>
            </op>
          </expr>
        </expr>
      </expr>
    </info>
  </object>
  <object id="Info16" type="oblivion.db.lex.LexicalInfo">
    <oblivion.db.lex.LexicalInfo>
      <name>Info.Months</name>
      <lschema ref="Schema15"/>
      <info ref="value124"/>
    </oblivion.db.lex.LexicalInfo>
  </object>
  <object id="variable118" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype30"/>
      <name>Info.Months</name>
      <label>Info.Months</label>
      <value type="oblivion.db.lex.LexicalInfo">
        <oblivion.db.lex.LexicalInfo ref="Info16"/>
      </value>
    </variable>
  </object>
  <object id="value125" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value37"/>
      <op>
        <name>oblivion.db.op.functions.ColorGradientFunctions$Relative</name>
      </op>
      <expr kind="variable">
        <op>
          <variable ref="variable27"/>
        </op>
      </expr>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.DoubleFunctions$Invoke</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable65"/>
          </op>
        </expr>
      </expr>
      <expr kind="aggregate">
        <op>
          <name>oblivion.db.op.aggregates.DoubleAggregates$Min</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable100"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable65"/>
            </op>
          </expr>
        </expr>
      </expr>
      <expr kind="aggregate">
        <op>
          <name>oblivion.db.op.aggregates.DoubleAggregates$Max</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable100"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable65"/>
            </op>
          </expr>
        </expr>
      </expr>
    </expr>
  </object>
  <object id="Expression18" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>CalcStormDataColor</name>
      <ltype>java.awt.Color</ltype>
      <lschema ref="Schema0"/>
      <expression ref="value125"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable119" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>CalcStormDataColor</name>
      <label>CalcStormDataColor</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression18"/>
      </value>
    </variable>
  </object>
  <object id="value126" type="oblivion.db.op.Expression">
    <expr kind="aggregate">
      <schema ref="value39"/>
      <op>
        <name>oblivion.db.op.aggregates.DoubleAggregates$Sum</name>
      </op>
      <expr kind="index">
        <op>
          <type>oblivion.db.Data</type>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable111"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable54"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable55"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.StringFunctions$ToObject</name>
          </op>
          <expr kind="attribute">
            <op>
              <index>5</index>
            </op>
          </expr>
        </expr>
        <expr kind="constant">
          <op>
            <type>oblivion.db.Data</type>
            <family>None</family>
            <name>None</name>
          </op>
        </expr>
      </expr>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable63"/>
          </op>
        </expr>
      </expr>
    </expr>
  </object>
  <object id="Expression19" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Counties.CalcTotalSomething</name>
      <ltype>double</ltype>
      <lschema ref="Schema2"/>
      <expression ref="value126"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable120" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>Counties.CalcTotalSomething</name>
      <label>Counties.CalcTotalSomething</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression19"/>
      </value>
    </variable>
  </object>
  <object id="value127" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value39"/>
      <op>
        <name>oblivion.db.op.functions.ColorGradientFunctions$Relative</name>
      </op>
      <expr kind="variable">
        <op>
          <variable ref="variable27"/>
        </op>
      </expr>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.DoubleFunctions$Invoke</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable120"/>
          </op>
        </expr>
      </expr>
      <expr kind="aggregate">
        <op>
          <name>oblivion.db.op.aggregates.DoubleAggregates$Min</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable103"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable120"/>
            </op>
          </expr>
        </expr>
      </expr>
      <expr kind="aggregate">
        <op>
          <name>oblivion.db.op.aggregates.DoubleAggregates$Max</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable103"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable120"/>
            </op>
          </expr>
        </expr>
      </expr>
    </expr>
  </object>
  <object id="Expression20" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Counties.CalcGradientFill2</name>
      <ltype>java.awt.Color</ltype>
      <lschema ref="Schema2"/>
      <expression ref="value127"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="value128" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value39"/>
      <op>
        <name>oblivion.db.op.functions.ColorGradientFunctions$Relative</name>
      </op>
      <expr kind="variable">
        <op>
          <variable ref="variable27"/>
        </op>
      </expr>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.DoubleFunctions$Invoke</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable120"/>
          </op>
        </expr>
      </expr>
      <expr kind="aggregate">
        <op>
          <name>oblivion.db.op.aggregates.DoubleAggregates$Min</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable103"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable120"/>
            </op>
          </expr>
        </expr>
      </expr>
      <expr kind="aggregate">
        <op>
          <name>oblivion.db.op.aggregates.DoubleAggregates$Max</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable103"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable120"/>
            </op>
          </expr>
        </expr>
      </expr>
    </expr>
  </object>
  <object id="Expression21" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Counties.CalcGradientFill</name>
      <ltype>java.awt.Color</ltype>
      <lschema ref="Schema2"/>
      <expression ref="value128"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable121" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>Counties.CalcGradientFill</name>
      <label>Counties.CalcGradientFill</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression21"/>
      </value>
    </variable>
  </object>
  <object id="value129" type="oblivion.db.op.Expression">
    <expr kind="aggregate">
      <schema ref="value47"/>
      <op>
        <name>oblivion.db.op.aggregates.DoubleAggregates$Sum</name>
      </op>
      <expr kind="index">
        <op>
          <type>oblivion.db.Data</type>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable111"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable54"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable55"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.IntegerFunctions$ToObject</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.IntegerFunctions$FromS</name>
            </op>
            <expr kind="attribute">
              <op>
                <index>5</index>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="constant">
          <op>
            <type>oblivion.db.Data</type>
            <family>None</family>
            <name>None</name>
          </op>
        </expr>
      </expr>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable65"/>
          </op>
        </expr>
      </expr>
    </expr>
  </object>
  <object id="Expression22" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Altcounty.CalcTotalInjuries</name>
      <ltype>double</ltype>
      <lschema ref="Schema11"/>
      <expression ref="value129"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable122" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>Altcounty.CalcTotalInjuries</name>
      <annotation>
        <description/>
      </annotation>
      <label>Altcounty.CalcTotalSomething</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression22"/>
      </value>
    </variable>
  </object>
  <object id="value130" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value47"/>
      <op>
        <name>oblivion.db.op.functions.ColorGradientFunctions$Relative</name>
      </op>
      <expr kind="variable">
        <op>
          <variable ref="variable27"/>
        </op>
      </expr>
      <expr kind="function">
        <op>
          <name>oblivion.db.op.functions.DoubleFunctions$Invoke</name>
        </op>
        <expr kind="variable">
          <op>
            <variable ref="variable122"/>
          </op>
        </expr>
      </expr>
      <expr kind="aggregate">
        <op>
          <name>oblivion.db.op.aggregates.DoubleAggregates$Min</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable114"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable122"/>
            </op>
          </expr>
        </expr>
      </expr>
      <expr kind="aggregate">
        <op>
          <name>oblivion.db.op.aggregates.DoubleAggregates$Max</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable114"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable122"/>
            </op>
          </expr>
        </expr>
      </expr>
    </expr>
  </object>
  <object id="Expression23" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>Altcounty.CalcFIllColor</name>
      <ltype>java.awt.Color</ltype>
      <lschema ref="Schema11"/>
      <expression ref="value130"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable123" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>Altcounty.CalcFIllColor</name>
      <annotation>
        <description/>
      </annotation>
      <label>Altcounty.CalcFIllColor</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression23"/>
      </value>
    </variable>
  </object>
  <object id="value131" type="oblivion.db.op.Expression">
    <expr kind="function">
      <schema ref="value38"/>
      <op>
        <name>oblivion.db.op.functions.SelectionFunctions$IsSelected2</name>
      </op>
      <expr kind="variable">
        <op>
          <variable ref="variable9"/>
        </op>
      </expr>
      <expr kind="index">
        <op>
          <type>int</type>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable116"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable54"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable56"/>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ClassFunctions$ToObject</name>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.ClassFunctions$Invoke</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable60"/>
              </op>
            </expr>
          </expr>
        </expr>
        <expr kind="value">
          <op>
            <value type="int">
              <int>-1</int>
            </value>
          </op>
        </expr>
      </expr>
    </expr>
  </object>
  <object id="Expression24" type="oblivion.db.lex.LexicalExpression">
    <oblivion.db.lex.LexicalExpression>
      <name>States.IsStateSelected</name>
      <ltype>boolean</ltype>
      <lschema ref="Schema1"/>
      <expression ref="value131"/>
    </oblivion.db.lex.LexicalExpression>
  </object>
  <object id="variable124" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype26"/>
      <name>States.IsStateSelected</name>
      <annotation>
        <description/>
      </annotation>
      <label>States.IsStateSelected</label>
      <value type="oblivion.db.lex.LexicalExpression">
        <oblivion.db.lex.LexicalExpression ref="Expression24"/>
      </value>
    </variable>
  </object>
  <object id="value132" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <schema ref="value39"/>
        <op>
          <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ColorFunctions$Invoke</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable121"/>
            </op>
          </expr>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#000000d2</color>
            </value>
          </op>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.GeoShapeFunctions$Resample</name>
          </op>
          <expr kind="attribute">
            <op>
              <index>0</index>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="double">
                <double>0.1</double>
              </value>
            </op>
          </expr>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection17" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Counties</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema2"/>
      <projection ref="value132"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="variable125" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.Counties</name>
      <annotation>
        <description/>
      </annotation>
      <label>Projection.Counties</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection17"/>
      </value>
    </variable>
  </object>
  <object id="variable126" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.Zone</name>
      <annotation>
        <description/>
      </annotation>
      <label>Projection.Zone</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection17"/>
      </value>
    </variable>
  </object>
  <object id="value133" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <schema ref="value47"/>
        <op>
          <name>oblivion.view.plane2D.glyph.Functions$CreateGeoShape</name>
        </op>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ColorFunctions$Invoke</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable123"/>
            </op>
          </expr>
        </expr>
        <expr kind="value">
          <op>
            <value type="java.awt.Color">
              <color>#000000d2</color>
            </value>
          </op>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.GeoShapeFunctions$Resample</name>
          </op>
          <expr kind="attribute">
            <op>
              <index>8</index>
            </op>
          </expr>
          <expr kind="value">
            <op>
              <value type="double">
                <double>0.01</double>
              </value>
            </op>
          </expr>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection18" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Altcounty</name>
      <loschema>
        <name>Glyph.Plane2D</name>
      </loschema>
      <lischema ref="Schema11"/>
      <projection ref="value133"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="variable127" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.Altcounty</name>
      <label>Projection.Altcounty</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection18"/>
      </value>
    </variable>
  </object>
  <object id="value134" type="oblivion.db.op.ExpressionProjection">
    <projection>
      <expr kind="function">
        <schema>
          <attribute>
            <type>java.lang.Object</type>
            <name>Key</name>
          </attribute>
          <attribute>
            <type>oblivion.db.Data</type>
            <name>Set</name>
          </attribute>
        </schema>
        <op>
          <name>oblivion.db.op.functions.IntegerFunctions$FromObject</name>
        </op>
        <expr kind="attribute">
          <op>
            <index>0</index>
          </op>
        </expr>
      </expr>
      <expr kind="aggregate">
        <schema>
          <attribute>
            <type>java.lang.Object</type>
            <name>Key</name>
          </attribute>
          <attribute>
            <type>oblivion.db.Data</type>
            <name>Set</name>
          </attribute>
        </schema>
        <op>
          <name>oblivion.db.op.aggregates.DoubleAggregates$Sum</name>
        </op>
        <expr kind="index">
          <op>
            <type>oblivion.db.Data</type>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable111"/>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable54"/>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable55"/>
              </op>
            </expr>
          </expr>
          <expr kind="attribute">
            <op>
              <index>0</index>
            </op>
          </expr>
          <expr kind="constant">
            <op>
              <type>oblivion.db.Data</type>
              <family>None</family>
              <name>None</name>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable65"/>
            </op>
          </expr>
        </expr>
      </expr>
      <expr kind="aggregate">
        <schema>
          <attribute>
            <type>java.lang.Object</type>
            <name>Key</name>
          </attribute>
          <attribute>
            <type>oblivion.db.Data</type>
            <name>Set</name>
          </attribute>
        </schema>
        <op>
          <name>oblivion.db.op.aggregates.DoubleAggregates$Sum</name>
        </op>
        <expr kind="index">
          <op>
            <type>oblivion.db.Data</type>
          </op>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.DataFunctions$FromLexicalInfo</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable111"/>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable54"/>
              </op>
            </expr>
          </expr>
          <expr kind="function">
            <op>
              <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
            </op>
            <expr kind="variable">
              <op>
                <variable ref="variable55"/>
              </op>
            </expr>
          </expr>
          <expr kind="attribute">
            <op>
              <index>0</index>
            </op>
          </expr>
          <expr kind="constant">
            <op>
              <type>oblivion.db.Data</type>
              <family>None</family>
              <name>None</name>
            </op>
          </expr>
        </expr>
        <expr kind="function">
          <op>
            <name>oblivion.db.op.functions.ExpressionFunctions$FromLexical</name>
          </op>
          <expr kind="variable">
            <op>
              <variable ref="variable68"/>
            </op>
          </expr>
        </expr>
      </expr>
    </projection>
  </object>
  <object id="Projection19" type="oblivion.db.lex.LexicalProjection">
    <oblivion.db.lex.LexicalProjection>
      <name>Projection.Group</name>
      <loschema ref="Schema13"/>
      <lischema>
        <name>Group</name>
      </lischema>
      <projection ref="value134"/>
    </oblivion.db.lex.LexicalProjection>
  </object>
  <object id="variable128" type="oblivion.lp.Variable">
    <variable>
      <prototype ref="prototype28"/>
      <name>Projection.Group</name>
      <annotation>
        <description/>
      </annotation>
      <label>Projection.Group</label>
      <value type="oblivion.db.lex.LexicalProjection">
        <oblivion.db.lex.LexicalProjection ref="Projection19"/>
      </value>
    </variable>
  </object>
  <object id="control0" type="oblivion.view.map.view.MapView">
    <Map>
      <name>Map</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Tracking" item="Show dimensions">false</check>
        <check group="Tracking" item="Show lines">false</check>
        <check group="Tracking" item="Show coordinates">false</check>
      </options>
    </Map>
  </object>
  <object id="control1" type="oblivion.view.cell.view.ListView">
    <ListView>
      <name>StatesList ViewFrame</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Design" item="No Header">false</check>
        <check group="Selection" item="Force">false</check>
        <radio group="Layout" item="Vertical">true</radio>
        <radio group="Selection Mode" item="Multiple">true</radio>
      </options>
      <position>
        <x>0</x>
        <y>0</y>
      </position>
    </ListView>
  </object>
  <object id="control2" type="oblivion.lpui.misc.ControlCheckBox">
    <ControlCheckBox>
      <name>Direct Deaths</name>
      <annotation>
        <description/>
      </annotation>
      <options/>
      <property tag="Flag">
        <variable ref="variable30"/>
      </property>
    </ControlCheckBox>
  </object>
  <object id="control3" type="oblivion.lpui.misc.ControlCheckBox">
    <ControlCheckBox>
      <name>Indirect Deaths</name>
      <annotation>
        <description/>
      </annotation>
      <options/>
      <property tag="Flag">
        <variable ref="variable31"/>
      </property>
    </ControlCheckBox>
  </object>
  <object id="control4" type="oblivion.lpui.misc.ControlCheckBox">
    <ControlCheckBox>
      <name>Direct Injuries</name>
      <annotation>
        <description/>
      </annotation>
      <options/>
      <property tag="Flag">
        <variable ref="variable28"/>
      </property>
    </ControlCheckBox>
  </object>
  <object id="control5" type="oblivion.lpui.misc.ControlCheckBox">
    <ControlCheckBox>
      <name>Indirect Injuries</name>
      <annotation>
        <description/>
      </annotation>
      <options/>
      <property tag="Flag">
        <variable ref="variable29"/>
      </property>
    </ControlCheckBox>
  </object>
  <object id="control6" type="oblivion.lpui.misc.ControlCheckBox">
    <ControlCheckBox>
      <name>Property Damage</name>
      <annotation>
        <description/>
      </annotation>
      <options/>
      <property tag="Flag">
        <variable ref="variable32"/>
      </property>
    </ControlCheckBox>
  </object>
  <object id="control7" type="oblivion.lpui.misc.ControlCheckBox">
    <ControlCheckBox>
      <name>Crop Damage</name>
      <annotation>
        <description/>
      </annotation>
      <options/>
      <property tag="Flag">
        <variable ref="variable33"/>
      </property>
    </ControlCheckBox>
  </object>
  <object id="control8" type="oblivion.lpui.misc.ControlLabel">
    <ControlLabel>
      <name>Label Bar</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <radio group="Orientation" item="North">true</radio>
      </options>
      <property tag="Background">
        <variable ref="variable34"/>
      </property>
    </ControlLabel>
  </object>
  <object id="control9" type="oblivion.view.cell.view.TableView">
    <TableView>
      <name>Table View</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Design" item="No Header">false</check>
        <check group="Selection" item="Force">false</check>
        <check group="Lines" item="Horizontal">true</check>
        <check group="Lines" item="Vertical">true</check>
        <radio group="Selection Mode" item="Multiple">true</radio>
      </options>
      <property tag="Info">
        <variable ref="variable100"/>
      </property>
      <position>
        <x>0</x>
        <y>0</y>
      </position>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
    </TableView>
  </object>
  <object id="control10" type="oblivion.view.plane2D.view.GlyphPlaneView">
    <GlyphPlaneView2D>
      <name>MapView</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Rendering" item="Greek Zooms">false</check>
        <check group="Lines" item="Horizontal">false</check>
        <check group="Lines" item="Vertical">false</check>
        <check group="Tracking" item="Show dimensions">false</check>
        <check group="Tracking" item="Show lines">false</check>
        <check group="Tracking" item="Show coordinates">false</check>
        <radio group="Layers" item="2">true</radio>
      </options>
      <property tag="Background">
        <variable ref="variable6"/>
      </property>
      <property tag="XRange">
        <variable ref="variable0"/>
      </property>
      <property tag="YRange">
        <variable ref="variable1"/>
      </property>
      <property tag="Layer0.Info">
        <variable ref="variable113"/>
      </property>
      <property tag="Layer0.Projection">
        <variable ref="variable93"/>
      </property>
      <property tag="Layer1.Info">
        <variable ref="variable115"/>
      </property>
      <property tag="Layer1.Projection">
        <variable ref="variable127"/>
      </property>
    </GlyphPlaneView2D>
  </object>
  <object id="control11" type="oblivion.view.range.view.AxialRangeControl">
    <AxialRangeControl>
      <name>YearAxis</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Look" item="Symmetric">false</check>
        <check group="Show" item="Label">true</check>
        <check group="Show" item="Ticks">true</check>
        <check group="Show" item="Units">true</check>
        <radio group="Orientation" item="North">true</radio>
      </options>
      <property tag="Range">
        <variable ref="variable2"/>
      </property>
      <property tag="Units Format">
        <variable ref="variable5"/>
      </property>
    </AxialRangeControl>
  </object>
  <object id="control12" type="oblivion.lpui.misc.ControlScrollBar">
    <ControlScrollBar>
      <name>ScrollBar</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Options" item="Live Scrolling">true</check>
        <radio group="Orientation" item="Vertical">true</radio>
      </options>
      <property tag="Scroll">
        <variable ref="variable7"/>
      </property>
    </ControlScrollBar>
  </object>
  <object id="control13" type="oblivion.view.cell.view.ListView">
    <ListView>
      <name>StatesList View</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Design" item="No Header">true</check>
        <check group="Selection" item="Force">false</check>
        <radio group="Layout" item="Vertical">true</radio>
        <radio group="Selection Mode" item="Multiple">true</radio>
      </options>
      <property tag="Info">
        <variable ref="variable116"/>
      </property>
      <property tag="Sort">
        <variable ref="variable99"/>
      </property>
      <property tag="Selection">
        <variable ref="variable9"/>
      </property>
      <position>
        <x>0</x>
        <y>0</y>
      </position>
    </ListView>
  </object>
  <object id="control14" type="oblivion.lpui.misc.ControlButton">
    <ControlButton>
      <name>Button</name>
      <annotation>
        <description/>
      </annotation>
      <options/>
      <property tag="Text">
        <variable ref="variable8"/>
      </property>
    </ControlButton>
  </object>
  <object id="control15" type="oblivion.view.cell.view.ListView">
    <ListView>
      <name>List View</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Design" item="No Header">false</check>
        <check group="Selection" item="Force">false</check>
        <radio group="Layout" item="Vertical">true</radio>
        <radio group="Selection Mode" item="Multiple">true</radio>
      </options>
      <property tag="Info">
        <variable ref="variable106"/>
      </property>
      <property tag="Selection">
        <variable ref="variable13"/>
      </property>
      <position>
        <x>0</x>
        <y>0</y>
      </position>
    </ListView>
  </object>
  <object id="control16" type="oblivion.view.cell.view.ListView">
    <ListView>
      <name>CountyList View</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Design" item="No Header">false</check>
        <check group="Selection" item="Force">false</check>
        <radio group="Layout" item="Vertical">true</radio>
        <radio group="Selection Mode" item="Multiple">true</radio>
      </options>
      <property tag="Info">
        <variable ref="variable117"/>
      </property>
      <property tag="Sort">
        <variable ref="variable99"/>
      </property>
      <property tag="Selection">
        <variable ref="variable17"/>
      </property>
      <position>
        <x>0</x>
        <y>0</y>
      </position>
    </ListView>
  </object>
  <object id="control17" type="oblivion.view.cell.view.ListView">
    <ListView>
      <name>EventTypeListView</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Design" item="No Header">false</check>
        <check group="Selection" item="Force">false</check>
        <radio group="Layout" item="Vertical">true</radio>
        <radio group="Selection Mode" item="Multiple">true</radio>
      </options>
      <property tag="Info">
        <variable ref="variable108"/>
      </property>
      <property tag="Selection">
        <variable ref="variable36"/>
      </property>
      <position>
        <x>0</x>
        <y>20</y>
      </position>
    </ListView>
  </object>
  <object id="control18" type="oblivion.view.range.view.AxialRangeControl">
    <AxialRangeControl>
      <name>MonthAxis</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Look" item="Symmetric">false</check>
        <check group="Show" item="Label">true</check>
        <check group="Show" item="Ticks">true</check>
        <check group="Show" item="Units">true</check>
        <radio group="Orientation" item="North">true</radio>
      </options>
      <property tag="Range">
        <variable ref="variable18"/>
      </property>
      <property tag="Units Format">
        <variable ref="variable5"/>
      </property>
    </AxialRangeControl>
  </object>
  <object id="control19" type="oblivion.view.range.view.AxialRangeControl">
    <AxialRangeControl>
      <name>Axis</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Look" item="Symmetric">false</check>
        <check group="Show" item="Label">true</check>
        <check group="Show" item="Ticks">true</check>
        <check group="Show" item="Units">true</check>
        <radio group="Orientation" item="North">true</radio>
      </options>
      <property tag="Range">
        <variable ref="variable20"/>
      </property>
      <property tag="Units Format">
        <variable ref="variable5"/>
      </property>
    </AxialRangeControl>
  </object>
  <object id="control20" type="oblivion.view.plane2D.view.GlyphPlaneView">
    <GlyphPlaneView2D>
      <name>AlaskaMap</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Rendering" item="Greek Zooms">false</check>
        <check group="Lines" item="Horizontal">false</check>
        <check group="Lines" item="Vertical">false</check>
        <check group="Tracking" item="Show dimensions">false</check>
        <check group="Tracking" item="Show lines">false</check>
        <check group="Tracking" item="Show coordinates">false</check>
        <radio group="Layers" item="3">true</radio>
      </options>
      <property tag="Background">
        <variable ref="variable26"/>
      </property>
      <property tag="XRange">
        <variable ref="variable22"/>
      </property>
      <property tag="YRange">
        <variable ref="variable23"/>
      </property>
      <property tag="Layer0.Info">
        <variable ref="variable102"/>
      </property>
      <property tag="Layer0.Projection">
        <variable ref="variable86"/>
      </property>
      <property tag="Layer0.Filter">
        <variable ref="variable76"/>
      </property>
      <property tag="Layer1.Info">
        <variable ref="variable103"/>
      </property>
      <property tag="Layer1.Projection">
        <variable ref="variable125"/>
      </property>
      <property tag="Layer1.Filter">
        <variable ref="variable80"/>
      </property>
    </GlyphPlaneView2D>
  </object>
  <object id="control21" type="oblivion.view.plane2D.view.GlyphPlaneView">
    <GlyphPlaneView2D>
      <name>HawaiiMap</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Rendering" item="Greek Zooms">false</check>
        <check group="Lines" item="Horizontal">false</check>
        <check group="Lines" item="Vertical">false</check>
        <check group="Tracking" item="Show dimensions">false</check>
        <check group="Tracking" item="Show lines">false</check>
        <check group="Tracking" item="Show coordinates">false</check>
        <radio group="Layers" item="3">true</radio>
      </options>
      <property tag="Background">
        <variable ref="variable26"/>
      </property>
      <property tag="XRange">
        <variable ref="variable24"/>
      </property>
      <property tag="YRange">
        <variable ref="variable25"/>
      </property>
      <property tag="Layer0.Info">
        <variable ref="variable102"/>
      </property>
      <property tag="Layer0.Projection">
        <variable ref="variable86"/>
      </property>
      <property tag="Layer1.Info">
        <variable ref="variable103"/>
      </property>
      <property tag="Layer1.Projection">
        <variable ref="variable125"/>
      </property>
    </GlyphPlaneView2D>
  </object>
  <object id="control22" type="oblivion.view.cell.view.TableView">
    <TableView>
      <name>Table View0</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Design" item="No Header">false</check>
        <check group="Selection" item="Force">false</check>
        <check group="Lines" item="Horizontal">true</check>
        <check group="Lines" item="Vertical">true</check>
        <radio group="Selection Mode" item="Multiple">true</radio>
      </options>
      <property tag="Info">
        <variable ref="variable111"/>
      </property>
      <property tag="Projection">
        <variable ref="variable128"/>
      </property>
      <position>
        <x>0</x>
        <y>0</y>
      </position>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
      <colwidth>75</colwidth>
    </TableView>
  </object>
  <object id="control23" type="oblivion.view.plane2D.view.GlyphPlaneView">
    <GlyphPlaneView2D>
      <name>AlaskaMap0</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Rendering" item="Greek Zooms">false</check>
        <check group="Lines" item="Horizontal">false</check>
        <check group="Lines" item="Vertical">false</check>
        <check group="Tracking" item="Show dimensions">false</check>
        <check group="Tracking" item="Show lines">false</check>
        <check group="Tracking" item="Show coordinates">false</check>
        <radio group="Layers" item="3">true</radio>
      </options>
      <property tag="Background">
        <variable ref="variable6"/>
      </property>
      <property tag="XRange">
        <variable ref="variable22"/>
      </property>
      <property tag="YRange">
        <variable ref="variable23"/>
      </property>
      <property tag="Layer0.Info">
        <variable ref="variable102"/>
      </property>
      <property tag="Layer0.Projection">
        <variable ref="variable86"/>
      </property>
      <property tag="Layer1.Info">
        <variable ref="variable103"/>
      </property>
      <property tag="Layer1.Projection">
        <variable ref="variable125"/>
      </property>
    </GlyphPlaneView2D>
  </object>
  <object id="control24" type="oblivion.view.plane2D.view.GlyphPlaneView">
    <GlyphPlaneView2D>
      <name>HawaiiMap0</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Rendering" item="Greek Zooms">false</check>
        <check group="Lines" item="Horizontal">false</check>
        <check group="Lines" item="Vertical">false</check>
        <check group="Tracking" item="Show dimensions">false</check>
        <check group="Tracking" item="Show lines">false</check>
        <check group="Tracking" item="Show coordinates">false</check>
        <radio group="Layers" item="3">true</radio>
      </options>
      <property tag="Background">
        <variable ref="variable26"/>
      </property>
      <property tag="XRange">
        <variable ref="variable24"/>
      </property>
      <property tag="YRange">
        <variable ref="variable25"/>
      </property>
      <property tag="Layer0.Info">
        <variable ref="variable102"/>
      </property>
      <property tag="Layer0.Projection">
        <variable ref="variable86"/>
      </property>
      <property tag="Layer1.Info">
        <variable ref="variable103"/>
      </property>
      <property tag="Layer1.Projection">
        <variable ref="variable125"/>
      </property>
    </GlyphPlaneView2D>
  </object>
  <object id="control25" type="oblivion.view.plane2D.view.GlyphPlaneView">
    <GlyphPlaneView2D>
      <name>MapView0</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Rendering" item="Greek Zooms">false</check>
        <check group="Lines" item="Horizontal">false</check>
        <check group="Lines" item="Vertical">false</check>
        <check group="Tracking" item="Show dimensions">false</check>
        <check group="Tracking" item="Show lines">false</check>
        <check group="Tracking" item="Show coordinates">false</check>
        <radio group="Layers" item="3">true</radio>
      </options>
      <property tag="Background">
        <variable ref="variable6"/>
      </property>
      <property tag="XRange">
        <variable ref="variable0"/>
      </property>
      <property tag="YRange">
        <variable ref="variable1"/>
      </property>
      <property tag="Layer0.Info">
        <variable ref="variable113"/>
      </property>
      <property tag="Layer0.Projection">
        <variable ref="variable93"/>
      </property>
      <property tag="Layer1.Info">
        <variable ref="variable114"/>
      </property>
      <property tag="Layer1.Projection">
        <variable ref="variable127"/>
      </property>
    </GlyphPlaneView2D>
  </object>
  <object id="control26" type="oblivion.view.plane2D.view.GlyphPlaneView">
    <GlyphPlaneView2D>
      <name>AlaskaMap1</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Rendering" item="Greek Zooms">false</check>
        <check group="Lines" item="Horizontal">false</check>
        <check group="Lines" item="Vertical">false</check>
        <check group="Tracking" item="Show dimensions">false</check>
        <check group="Tracking" item="Show lines">false</check>
        <check group="Tracking" item="Show coordinates">false</check>
        <radio group="Layers" item="3">true</radio>
      </options>
      <property tag="Background">
        <variable ref="variable26"/>
      </property>
      <property tag="XRange">
        <variable ref="variable22"/>
      </property>
      <property tag="YRange">
        <variable ref="variable23"/>
      </property>
      <property tag="Layer0.Info">
        <variable ref="variable102"/>
      </property>
      <property tag="Layer0.Projection">
        <variable ref="variable86"/>
      </property>
      <property tag="Layer0.Filter">
        <variable ref="variable76"/>
      </property>
      <property tag="Layer1.Info">
        <variable ref="variable103"/>
      </property>
      <property tag="Layer1.Projection">
        <variable ref="variable125"/>
      </property>
      <property tag="Layer1.Filter">
        <variable ref="variable80"/>
      </property>
    </GlyphPlaneView2D>
  </object>
  <object id="control27" type="oblivion.view.plane2D.view.GlyphPlaneView">
    <GlyphPlaneView2D>
      <name>HawaiiMap1</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Rendering" item="Greek Zooms">false</check>
        <check group="Lines" item="Horizontal">false</check>
        <check group="Lines" item="Vertical">false</check>
        <check group="Tracking" item="Show dimensions">false</check>
        <check group="Tracking" item="Show lines">false</check>
        <check group="Tracking" item="Show coordinates">false</check>
        <radio group="Layers" item="3">true</radio>
      </options>
      <property tag="Background">
        <variable ref="variable6"/>
      </property>
      <property tag="XRange">
        <variable ref="variable24"/>
      </property>
      <property tag="YRange">
        <variable ref="variable25"/>
      </property>
      <property tag="Layer0.Info">
        <variable ref="variable102"/>
      </property>
      <property tag="Layer0.Projection">
        <variable ref="variable86"/>
      </property>
      <property tag="Layer1.Info">
        <variable ref="variable103"/>
      </property>
      <property tag="Layer1.Projection">
        <variable ref="variable125"/>
      </property>
    </GlyphPlaneView2D>
  </object>
  <object id="control28" type="oblivion.view.plane2D.view.GlyphPlaneView">
    <GlyphPlaneView2D>
      <name>MapView1</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Rendering" item="Greek Zooms">false</check>
        <check group="Lines" item="Horizontal">false</check>
        <check group="Lines" item="Vertical">false</check>
        <check group="Tracking" item="Show dimensions">false</check>
        <check group="Tracking" item="Show lines">false</check>
        <check group="Tracking" item="Show coordinates">false</check>
        <radio group="Layers" item="3">true</radio>
      </options>
      <property tag="Background">
        <variable ref="variable6"/>
      </property>
      <property tag="XRange">
        <variable ref="variable0"/>
      </property>
      <property tag="YRange">
        <variable ref="variable1"/>
      </property>
      <property tag="Layer0.Info">
        <variable ref="variable113"/>
      </property>
      <property tag="Layer0.Projection">
        <variable ref="variable93"/>
      </property>
      <property tag="Layer1.Info">
        <variable ref="variable114"/>
      </property>
      <property tag="Layer1.Projection">
        <variable ref="variable127"/>
      </property>
    </GlyphPlaneView2D>
  </object>
  <object id="control29" type="oblivion.view.cell.view.ListView">
    <ListView>
      <name>MonthListView</name>
      <annotation>
        <description/>
      </annotation>
      <options>
        <check group="Design" item="No Header">false</check>
        <check group="Selection" item="Force">false</check>
        <radio group="Layout" item="Vertical">true</radio>
        <radio group="Selection Mode" item="Multiple">true</radio>
      </options>
      <property tag="Info">
        <variable ref="variable118"/>
      </property>
      <property tag="Selection">
        <variable ref="variable35"/>
      </property>
      <position>
        <x>0</x>
        <y>46</y>
      </position>
    </ListView>
  </object>
  <object id="panel0" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <annotation>
        <description/>
      </annotation>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.EdgeLayout</type>
      </layout>
      <child>
        <component ref="control9"/>
        <constraints>
          <edge>center</edge>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel1" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <annotation>
        <description/>
      </annotation>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.FreeLayout</type>
      </layout>
      <child>
        <component ref="control10"/>
        <constraints>
          <x>0</x>
          <y>0</y>
          <w>1000</w>
          <h>600</h>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel2" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.EdgeLayout</type>
      </layout>
      <child>
        <component ref="control11"/>
        <constraints>
          <edge>center</edge>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel3" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <annotation>
        <description/>
      </annotation>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary>
          <insets>
            <t>0</t>
            <b>4</b>
            <l>5</l>
            <r>5</r>
          </insets>
        </boundary>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.EdgeLayout</type>
      </layout>
      <child>
        <component ref="control13"/>
        <constraints>
          <edge>center</edge>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel4" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <annotation>
        <description/>
      </annotation>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.EdgeLayout</type>
      </layout>
      <child>
        <component ref="control16"/>
        <constraints>
          <edge>center</edge>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel5" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.EdgeLayout</type>
      </layout>
      <child>
        <component ref="control17"/>
        <constraints>
          <edge>center</edge>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel6" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.EdgeLayout</type>
      </layout>
      <child>
        <component ref="control18"/>
        <constraints>
          <edge>center</edge>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel7" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.EdgeLayout</type>
      </layout>
      <child>
        <component ref="control19"/>
        <constraints>
          <edge>center</edge>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel8" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.EdgeLayout</type>
      </layout>
      <child>
        <component ref="control22"/>
        <constraints>
          <edge>center</edge>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel9" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <annotation>
        <description/>
      </annotation>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.FreeLayout</type>
      </layout>
      <child>
        <component ref="control4"/>
        <constraints>
          <x>1</x>
          <y>1</y>
          <w>250</w>
          <h>30</h>
        </constraints>
      </child>
      <child>
        <component ref="control5"/>
        <constraints>
          <x>1</x>
          <y>28</y>
          <w>250</w>
          <h>30</h>
        </constraints>
      </child>
      <child>
        <component ref="control2"/>
        <constraints>
          <x>1</x>
          <y>55</y>
          <w>250</w>
          <h>30</h>
        </constraints>
      </child>
      <child>
        <component ref="control3"/>
        <constraints>
          <x>1</x>
          <y>82</y>
          <w>250</w>
          <h>30</h>
        </constraints>
      </child>
      <child>
        <component ref="control6"/>
        <constraints>
          <x>1</x>
          <y>120</y>
          <w>250</w>
          <h>30</h>
        </constraints>
      </child>
      <child>
        <component ref="control7"/>
        <constraints>
          <x>1</x>
          <y>147</y>
          <w>250</w>
          <h>30</h>
        </constraints>
      </child>
      <child>
        <component ref="control8"/>
        <constraints>
          <x>0</x>
          <y>115</y>
          <w>250</w>
          <h>2</h>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel10" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <annotation>
        <description/>
      </annotation>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.FreeLayout</type>
      </layout>
      <child>
        <component ref="control23"/>
        <constraints>
          <x>0</x>
          <y>0</y>
          <w>300</w>
          <h>225</h>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel11" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <annotation>
        <description/>
      </annotation>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.FreeLayout</type>
      </layout>
      <child>
        <component ref="control27"/>
        <constraints>
          <x>0</x>
          <y>0</y>
          <w>180</w>
          <h>100</h>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="panel12" type="improvise.session.SessionPanel">
    <SessionPanel>
      <name ref="value16"/>
      <boundary>
        <type>oblivion.awt.boundary.EmptyBoundary</type>
        <boundary/>
      </boundary>
      <color ref="value8"/>
      <fill>false</fill>
      <layout>
        <type>oblivion.awt.layout.EdgeLayout</type>
      </layout>
      <child>
        <component ref="control29"/>
        <constraints>
          <edge>center</edge>
        </constraints>
      </child>
    </SessionPanel>
  </object>
  <object id="frame0" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>Table View</name>
      <annotation>
        <description/>
      </annotation>
      <title>Table View</title>
      <bounds>
        <x>196</x>
        <y>420</y>
        <w>1068</w>
        <h>280</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel0"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame1" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>CONUSMap</name>
      <annotation>
        <description/>
      </annotation>
      <title>Map</title>
      <bounds>
        <x>240</x>
        <y>4</y>
        <w>976</w>
        <h>588</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel1"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame2" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>YearAxis</name>
      <annotation>
        <description/>
      </annotation>
      <title>Axis</title>
      <bounds>
        <x>208</x>
        <y>0</y>
        <w>400</w>
        <h>76</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel2"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame3" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>State List</name>
      <annotation>
        <description/>
      </annotation>
      <title>List View</title>
      <bounds>
        <x>0</x>
        <y>0</y>
        <w>152</w>
        <h>216</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel3"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame4" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>CountyList</name>
      <annotation>
        <description/>
      </annotation>
      <title>List View</title>
      <bounds>
        <x>0</x>
        <y>216</y>
        <w>152</w>
        <h>202</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel4"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame5" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>EventTypeListView</name>
      <annotation>
        <description/>
      </annotation>
      <title>List View</title>
      <bounds>
        <x>0</x>
        <y>416</y>
        <w>152</w>
        <h>202</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel5"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame6" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>MonthAxis</name>
      <annotation>
        <description/>
      </annotation>
      <title>Axis</title>
      <bounds>
        <x>228</x>
        <y>192</y>
        <w>400</w>
        <h>75</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel6"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame7" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>DayAxis</name>
      <annotation>
        <description/>
      </annotation>
      <title>Axis</title>
      <bounds>
        <x>164</x>
        <y>324</y>
        <w>400</w>
        <h>75</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel7"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame8" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>Table View0</name>
      <annotation>
        <description/>
      </annotation>
      <title>Table View</title>
      <bounds>
        <x>836</x>
        <y>280</y>
        <w>672</w>
        <h>328</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel8"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame9" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>CheckBox</name>
      <annotation>
        <description/>
      </annotation>
      <title>CheckBox</title>
      <bounds>
        <x>0</x>
        <y>616</y>
        <w>152</w>
        <h>216</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel9"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame10" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>AKMap</name>
      <annotation>
        <description/>
      </annotation>
      <title>Map</title>
      <bounds>
        <x>1348</x>
        <y>608</y>
        <w>308</w>
        <h>256</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel10"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame11" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>HIMap</name>
      <annotation>
        <description/>
      </annotation>
      <title>Map</title>
      <bounds>
        <x>1660</x>
        <y>608</y>
        <w>188</w>
        <h>132</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel11"/>
      </child>
    </SessionFrame>
  </object>
  <object id="frame12" type="improvise.session.SessionFrame">
    <SessionFrame>
      <name>List View</name>
      <title>List View</title>
      <bounds>
        <x>0</x>
        <y>0</y>
        <w>152</w>
        <h>212</h>
      </bounds>
      <color ref="value8"/>
      <level>0</level>
      <visible>true</visible>
      <clear>false</clear>
      <hidetitle>false</hidetitle>
      <hideboundary>false</hideboundary>
      <iconifiable>true</iconifiable>
      <maximizable>true</maximizable>
      <closable>true</closable>
      <child>
        <component ref="panel12"/>
      </child>
    </SessionFrame>
  </object>
  <object id="layer0" type="improvise.session.SessionLayer">
    <SessionLayer>
      <name>Untitled</name>
      <annotation>
        <description/>
      </annotation>
      <color>#ffffff</color>
      <child>
        <component ref="frame5"/>
      </child>
      <child>
        <component ref="frame8"/>
      </child>
      <child>
        <component ref="frame12"/>
      </child>
      <child>
        <component ref="frame7"/>
      </child>
      <child>
        <component ref="frame6"/>
      </child>
      <child>
        <component ref="frame4"/>
      </child>
      <child>
        <component ref="frame10"/>
      </child>
      <child>
        <component ref="frame11"/>
      </child>
      <child>
        <component ref="frame9"/>
      </child>
      <child>
        <component ref="frame2"/>
      </child>
      <child>
        <component ref="frame0"/>
      </child>
      <child>
        <component ref="frame1"/>
      </child>
      <child>
        <component ref="frame3"/>
      </child>
    </SessionLayer>
  </object>
  <object id="nested0" type="oblivion.view.range.view.GlassRangeLens">
    <GlassRangeLens>
      <parent ref="control11"/>
      <name>YearGlassRangeLens</name>
      <options>
        <check group="Frame" item="Fill">false</check>
        <check group="Frame" item="Show">true</check>
        <check group="Lines" item="Markers">false</check>
        <check group="Lines" item="Outline">false</check>
      </options>
      <property tag="Context Range">
        <variable ref="variable2"/>
      </property>
      <property tag="Range">
        <variable ref="variable3"/>
      </property>
    </GlassRangeLens>
  </object>
  <object id="nested1" type="oblivion.view.range.view.GlassRangeLens">
    <GlassRangeLens>
      <parent ref="control18"/>
      <name>MonthGlassRangeLens</name>
      <options>
        <check group="Frame" item="Fill">false</check>
        <check group="Frame" item="Show">true</check>
        <check group="Lines" item="Markers">false</check>
        <check group="Lines" item="Outline">false</check>
      </options>
      <property tag="Context Range">
        <variable ref="variable18"/>
      </property>
      <property tag="Range">
        <variable ref="variable19"/>
      </property>
    </GlassRangeLens>
  </object>
  <object id="nested2" type="oblivion.view.range.view.GlassRangeLens">
    <GlassRangeLens>
      <parent ref="control19"/>
      <name>DayGlassRangeLens</name>
      <options>
        <check group="Frame" item="Fill">false</check>
        <check group="Frame" item="Show">true</check>
        <check group="Lines" item="Markers">false</check>
        <check group="Lines" item="Outline">false</check>
      </options>
      <property tag="Context Range">
        <variable ref="variable20"/>
      </property>
      <property tag="Range">
        <variable ref="variable21"/>
      </property>
    </GlassRangeLens>
  </object>
</improvise>
